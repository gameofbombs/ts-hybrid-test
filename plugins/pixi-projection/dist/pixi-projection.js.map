{"version":3,"file":"pixi-projection.js","sourceRoot":"","sources":["../src/utils.ts","../src/xporter.ts","../src/base/Projection.ts","../src/base/webgl/BatchBuffer.ts","../src/base/webgl/generateMultiTextureShader.ts","../src/base/webgl/SpriteRenderer.ts","../src/curve/BaseSurface.ts","../src/curve/BilinearSurface.ts","../src/curve/Container2s.ts","../src/curve/ProjectionSurface.ts","../src/curve/SpriteBilinearRenderer.ts","../src/curve/SpriteStrangeRenderer.ts","../src/curve/StrangeSurface.ts","../src/curve/sprites/convert.ts","../src/curve/sprites/Sprite2s.ts","../src/curve/sprites/Text2s.ts","../src/proj2d/Container2d.ts","../src/proj2d/Matrix2d.ts","../src/proj2d/Projection2d.ts","../src/proj2d/mesh/Mesh2d.ts","../src/proj2d/mesh/Mesh2dRenderer.ts","../src/proj2d/sprites/convert.ts","../src/proj2d/sprites/Sprite2d.ts","../src/proj2d/sprites/Sprite2dRenderer.ts","../src/proj2d/sprites/Text2d.ts","../src/proj2d/z_masks/MaskHacker.ts","../src/proj2d/z_masks/SpriteMaskFilter.ts"],"names":[],"mappings":"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,MAAM,CAAC;YACvB,CAAC;YAED,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,UAAU,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","sourcesContent":["namespace pixi_projection.utils {\n\texport function createIndicesForQuads(size: number) {\n\t\t// the total number of indices in our array, there are 6 points per quad.\n\n\t\tconst totalIndices = size * 6;\n\n\t\tconst indices = new Uint16Array(totalIndices);\n\n\t\t// fill the indices with the quads to draw\n\t\tfor (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n\t\t\tindices[i + 0] = j + 0;\n\t\t\tindices[i + 1] = j + 1;\n\t\t\tindices[i + 2] = j + 2;\n\t\t\tindices[i + 3] = j + 0;\n\t\t\tindices[i + 4] = j + 2;\n\t\t\tindices[i + 5] = j + 3;\n\t\t}\n\n\t\treturn indices;\n\t}\n\n\t//bit twiddle is here\n\n\texport function isPow2(v: number): boolean {\n\t\treturn !(v & (v - 1)) && (!!v);\n\t}\n\n\texport function nextPow2(v: number): number {\n\t\tv += +(v === 0);\n\t\t--v;\n\t\tv |= v >>> 1;\n\t\tv |= v >>> 2;\n\t\tv |= v >>> 4;\n\t\tv |= v >>> 8;\n\t\tv |= v >>> 16;\n\t\treturn v + 1;\n\t}\n\n\texport function log2(v: number) {\n\t\tlet r: number, shift: number;\n\t\tr = +(v > 0xFFFF) << 4;\n\t\tv >>>= r;\n\t\tshift = +(v > 0xFF  ) << 3;\n\t\tv >>>= shift;\n\t\tr |= shift;\n\t\tshift = +(v > 0xF   ) << 2;\n\t\tv >>>= shift;\n\t\tr |= shift;\n\t\tshift = +(v > 0x3   ) << 1;\n\t\tv >>>= shift;\n\t\tr |= shift;\n\t\treturn r | (v >> 1);\n\t}\n\n\timport PointLike = PIXI.PointLike;\n\n\texport function getIntersectionFactor(p1: PointLike, p2: PointLike, p3: PointLike, p4: PointLike, out: PointLike): number {\n\t\tlet A1 = p2.x - p1.x, B1 = p3.x - p4.x, C1 = p3.x - p1.x;\n\t\tlet A2 = p2.y - p1.y, B2 = p3.y - p4.y, C2 = p3.y - p1.y;\n\t\tlet D = A1 * B2 - A2 * B1;\n\t\tif (Math.abs(D) < 1e-7) {\n\t\t\tout.x = A1;\n\t\t\tout.y = A2;\n\t\t\treturn 0;\n\t\t}\n\t\tlet T = C1 * B2 - C2 * B1;\n\t\tlet U = A1 * C2 - A2 * C1;\n\n\t\tlet t = T / D, u = U / D;\n\t\tif (u < (1e-6) || u - 1 > -1e-6) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tout.x = p1.x + t * (p2.x - p1.x);\n\t\tout.y = p1.y + t * (p2.y - p1.y);\n\n\t\treturn 1;\n\t}\n\n\texport function getPositionFromQuad(p: Array<PointLike>, anchor: PointLike, out: PointLike) {\n\t\tout = out || new PIXI.Point();\n\t\tlet a1 = 1.0 - anchor.x, a2 = 1.0 - a1;\n\t\tlet b1 = 1.0 - anchor.y, b2 = 1.0 - b1;\n\t\tout.x = (p[0].x * a1 + p[1].x * a2) * b1 + (p[3].x * a1 + p[2].x * a2) * b2;\n\t\tout.y = (p[0].y * a1 + p[1].y * a2) * b1 + (p[3].y * a1 + p[2].y * a2) * b2;\n\t\treturn out;\n\t}\n}\n","///<reference types=\"pixi.js\"/>\n// (PIXI as any).projection = pixi_projection;\n","declare namespace PIXI {\n    export interface TransformBase {\n        proj: pixi_projection.Projection;\n    }\n\n    export interface ObservablePoint {\n        _x: number;\n        _y: number;\n    }\n\n    export interface TransformStatic {\n        proj: pixi_projection.Projection;\n    }\n}\n\nnamespace pixi_projection {\n    export class Projection {\n\n        constructor(legacy: PIXI.TransformBase, enable: boolean = true) {\n            this.legacy = legacy as PIXI.TransformStatic;\n\n            if (enable) {\n                this.enabled = true;\n            }\n\n            // sorry for hidden class, it would be good to have special projection field in official pixi\n            this.legacy.proj = this;\n        }\n\n        legacy: PIXI.TransformStatic;\n\n        _enabled: boolean = false;\n\n        get enabled() {\n            return this._enabled;\n        }\n\n        set enabled(value: boolean) {\n            this._enabled = value;\n        }\n\n        clear() {\n        }\n    }\n}\n","namespace pixi_projection.webgl {\n\texport class BatchBuffer {\n\t\tvertices: ArrayBuffer;\n\t\tfloat32View: Float32Array;\n\t\tuint32View: Uint32Array;\n\n\n\t\tconstructor(size: number) {\n\t\t\tthis.vertices = new ArrayBuffer(size);\n\n\t\t\t/**\n\t\t\t * View on the vertices as a Float32Array for positions\n\t\t\t *\n\t\t\t * @member {Float32Array}\n\t\t\t */\n\t\t\tthis.float32View = new Float32Array(this.vertices);\n\n\t\t\t/**\n\t\t\t * View on the vertices as a Uint32Array for uvs\n\t\t\t *\n\t\t\t * @member {Float32Array}\n\t\t\t */\n\t\t\tthis.uint32View = new Uint32Array(this.vertices);\n\t\t}\n\n\t\t/**\n\t\t * Destroys the buffer.\n\t\t *\n\t\t */\n\t\tdestroy() {\n\t\t\tthis.vertices = null;\n\t\t}\n\t}\n}\n","namespace pixi_projection.webgl {\n\texport function generateMultiTextureShader(vertexSrc: string, fragmentSrc: string, gl: WebGLRenderingContext, maxTextures: number) {\n\t\tfragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures + '');\n\t\tfragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\n\n\t\tconst shader = new PIXI.Shader(gl, vertexSrc, fragmentSrc);\n\n\t\tconst sampleValues = new Int32Array(maxTextures);\n\n\t\tfor (let i = 0; i < maxTextures; i++) {\n\t\t\tsampleValues[i] = i;\n\t\t}\n\n\t\tshader.bind();\n\t\tshader.uniforms.uSamplers = sampleValues;\n\n\t\treturn shader;\n\t}\n\n\tfunction generateSampleSrc(maxTextures: number) {\n\t\tlet src = '';\n\n\t\tsrc += '\\n';\n\t\tsrc += '\\n';\n\n\t\tfor (let i = 0; i < maxTextures; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\tsrc += '\\nelse ';\n\t\t\t}\n\n\t\t\tif (i < maxTextures - 1) {\n\t\t\t\tsrc += `if(textureId == ${i}.0)`;\n\t\t\t}\n\n\t\t\tsrc += '\\n{';\n\t\t\tsrc += `\\n\\tcolor = texture2D(uSamplers[${i}], textureCoord);`;\n\t\t\tsrc += '\\n}';\n\t\t}\n\n\t\tsrc += '\\n';\n\t\tsrc += '\\n';\n\n\t\treturn src;\n\t}\n}\n","declare module PIXI {\n\texport interface BaseTexture {\n\t\t_virtalBoundId: number;\n\t}\n}\n\nnamespace pixi_projection.webgl {\n\timport BaseTexture = PIXI.BaseTexture;\n\timport ObjectRenderer = PIXI.ObjectRenderer;\n\timport settings = PIXI.settings;\n\timport GLBuffer = PIXI.glCore.GLBuffer;\n\timport VertexArrayObject = PIXI.glCore.VertexArrayObject;\n\n\timport WebGLRenderer = PIXI.WebGLRenderer;\n\timport Sprite = PIXI.Sprite;\n\n\timport premultiplyTint = PIXI.utils.premultiplyTint;\n\timport premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\n\n\tlet TICK = 0;\n\n\texport class BatchGroup {\n\t\ttextures: Array<BaseTexture> = [];\n\t\ttextureCount = 0;\n\t\tids: Array<Number> = [];\n\t\tsize = 0;\n\t\tstart = 0;\n\t\tblend = PIXI.BLEND_MODES.NORMAL;\n\t\tuniforms: any = null;\n\t}\n\n\texport abstract class MultiTextureSpriteRenderer extends ObjectRenderer {\n\t\tshaderVert = '';\n\t\tshaderFrag = '';\n\t\tMAX_TEXTURES_LOCAL = 32;\n\n\t\tabstract createVao(vertexBuffer: GLBuffer): PIXI.glCore.VertexArrayObject;\n\n\t\tabstract fillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, argb: number, textureId: number): void;\n\n\t\tgetUniforms(spr: PIXI.Sprite): any {\n\t\t\treturn null;\n\t\t}\n\n\t\tsyncUniforms(obj: any) {\n\t\t\tif (!obj) return;\n\t\t\tlet sh = this.shader;\n\t\t\tfor (let key in obj) {\n\t\t\t\tsh.uniforms[key] = obj[key];\n\t\t\t}\n\t\t}\n\n\t\tvertSize = 5;\n\t\tvertByteSize = this.vertSize * 4;\n\t\tsize = settings.SPRITE_BATCH_SIZE;\n\t\tbuffers: Array<BatchBuffer>;\n\n\t\tindices: Uint16Array;\n\n\t\tshader: PIXI.Shader;\n\n\t\tcurrentIndex = 0;\n\t\tgroups: Array<BatchGroup>;\n\t\tsprites: Array<Sprite> = [];\n\n\t\tindexBuffer: GLBuffer;\n\t\tvertexBuffers: Array<GLBuffer> = [];\n\t\tvaos: Array<VertexArrayObject> = [];\n\t\tvao: VertexArrayObject;\n\t\tvaoMax = 2;\n\t\tvertexCount = 0;\n\n\t\tMAX_TEXTURES = 1;\n\n\t\t/**\n\t\t * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n\t\t */\n\t\tconstructor(renderer: WebGLRenderer) {\n\t\t\tsuper(renderer);\n\n\t\t\tthis.indices = utils.createIndicesForQuads(this.size);\n\n\t\t\tthis.groups = [];\n\t\t\tfor (let k = 0; k < this.size; k++) {\n\t\t\t\tthis.groups[k] = new BatchGroup();\n\t\t\t}\n\n\t\t\tthis.vaoMax = 2;\n\t\t\tthis.vertexCount = 0;\n\n\t\t\tthis.renderer.on('prerender', this.onPrerender, this);\n\t\t}\n\n\t\t/**\n\t\t * Sets up the renderer context and necessary buffers.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tonContextChange() {\n\t\t\tconst gl = this.renderer.gl;\n\n\t\t\tthis.MAX_TEXTURES = Math.min(this.MAX_TEXTURES_LOCAL, this.renderer.plugins['sprite'].MAX_TEXTURES);\n\n\t\t\t// generate generateMultiTextureProgram, may be a better move?\n\t\t\tthis.shader = generateMultiTextureShader(this.shaderVert, this.shaderFrag, gl, this.MAX_TEXTURES);\n\n\t\t\tthis.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n\t\t\t// we use the second shader as the first one depending on your browser may omit aTextureId\n\t\t\t// as it is not used by the shader so is optimized out.\n\n\t\t\tthis.renderer.bindVao(null);\n\n\t\t\tconst attrs = this.shader.attributes;\n\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\n\t\t\t\t/* eslint-disable max-len */\n\t\t\t\tconst vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t\t// build the vao object that will render..\n\t\t\t\tthis.vaos[i] = this.createVao(vertexBuffer);\n\t\t\t}\n\n\t\t\tif (!this.buffers) {\n\t\t\t\tthis.buffers = [];\n\t\t\t\tfor (let i = 1; i <= utils.nextPow2(this.size); i *= 2) {\n\t\t\t\t\tthis.buffers.push(new BatchBuffer(i * 4 * this.vertByteSize));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.vao = this.vaos[0];\n\t\t}\n\n\t\t/**\n\t\t * Called before the renderer starts rendering.\n\t\t *\n\t\t */\n\t\tonPrerender() {\n\t\t\tthis.vertexCount = 0;\n\t\t}\n\n\t\t/**\n\t\t * Renders the sprite object.\n\t\t *\n\t\t * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n\t\t */\n\t\trender(sprite: Sprite) {\n\t\t\t// TODO set blend modes..\n\t\t\t// check texture..\n\t\t\tif (this.currentIndex >= this.size) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// get the uvs for the texture\n\n\t\t\t// if the uvs have not updated then no point rendering just yet!\n\t\t\tif (!(sprite as any)._texture._uvs) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(sprite as any)._texture.baseTexture) {\n\t\t\t\t//WTF, Rpgmaker MV?\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// push a texture.\n\t\t\t// increment the batchsize\n\t\t\tthis.sprites[this.currentIndex++] = sprite;\n\t\t}\n\n\t\t/**\n\t\t * Renders the content and empties the current batch.\n\t\t *\n\t\t */\n\t\tflush() {\n\t\t\tif (this.currentIndex === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst gl = this.renderer.gl;\n\t\t\tconst MAX_TEXTURES = this.MAX_TEXTURES;\n\n\t\t\tconst np2 = utils.nextPow2(this.currentIndex);\n\t\t\tconst log2 = utils.log2(np2);\n\t\t\tconst buffer = this.buffers[log2];\n\n\t\t\tconst sprites = this.sprites;\n\t\t\tconst groups = this.groups;\n\n\t\t\tconst float32View = buffer.float32View;\n\t\t\tconst uint32View = buffer.uint32View;\n\n\t\t\t// const touch = 0;// this.renderer.textureGC.count;\n\n\t\t\tlet index = 0;\n\t\t\tlet nextTexture: any;\n\t\t\tlet currentTexture: BaseTexture;\n\t\t\tlet currentUniforms: any = null;\n\t\t\tlet groupCount = 1;\n\t\t\tlet textureCount = 0;\n\t\t\tlet currentGroup = groups[0];\n\t\t\tlet vertexData;\n\t\t\tlet uvs;\n\t\t\tlet blendMode = premultiplyBlendMode[\n\t\t\t\t(sprites[0] as any)._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\n\n\t\t\tcurrentGroup.textureCount = 0;\n\t\t\tcurrentGroup.start = 0;\n\t\t\tcurrentGroup.blend = blendMode;\n\n\t\t\tTICK++;\n\n\t\t\tlet i;\n\n\t\t\tfor (i = 0; i < this.currentIndex; ++i) {\n\t\t\t\t// upload the sprite elemetns...\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\n\n\t\t\t\t// upload the sprite elemetns...\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\n\t\t\t\tconst sprite = sprites[i] as any;\n\n\t\t\t\tnextTexture = sprite._texture.baseTexture;\n\n\t\t\t\tconst spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\n\n\t\t\t\tif (blendMode !== spriteBlendMode) {\n\t\t\t\t\t// finish a group..\n\t\t\t\t\tblendMode = spriteBlendMode;\n\n\t\t\t\t\t// force the batch to break!\n\t\t\t\t\tcurrentTexture = null;\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\n\t\t\t\t\tTICK++;\n\t\t\t\t}\n\n\t\t\t\tconst uniforms = this.getUniforms(sprite);\n\t\t\t\tif (currentUniforms !== uniforms) {\n\t\t\t\t\tcurrentUniforms = uniforms;\n\n\t\t\t\t\tcurrentTexture = null;\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\n\t\t\t\t\tTICK++;\n\t\t\t\t}\n\n\t\t\t\tif (currentTexture !== nextTexture) {\n\t\t\t\t\tcurrentTexture = nextTexture;\n\n\t\t\t\t\tif (nextTexture._enabled !== TICK) {\n\t\t\t\t\t\tif (textureCount === MAX_TEXTURES) {\n\t\t\t\t\t\t\tTICK++;\n\n\t\t\t\t\t\t\ttextureCount = 0;\n\n\t\t\t\t\t\t\tcurrentGroup.size = i - currentGroup.start;\n\n\t\t\t\t\t\t\tcurrentGroup = groups[groupCount++];\n\t\t\t\t\t\t\tcurrentGroup.textureCount = 0;\n\t\t\t\t\t\t\tcurrentGroup.blend = blendMode;\n\t\t\t\t\t\t\tcurrentGroup.start = i;\n\t\t\t\t\t\t\tcurrentGroup.uniforms = currentUniforms;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextTexture._enabled = TICK;\n\t\t\t\t\t\tnextTexture._virtalBoundId = textureCount;\n\n\t\t\t\t\t\tcurrentGroup.textures[currentGroup.textureCount++] = nextTexture;\n\t\t\t\t\t\ttextureCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst alpha = Math.min(sprite.worldAlpha, 1.0);\n\t\t\t\t// we dont call extra function if alpha is 1.0, that's faster\n\t\t\t\tconst argb = alpha < 1.0 && nextTexture.premultipliedAlpha ? premultiplyTint(sprite._tintRGB, alpha)\n\t\t\t\t\t: sprite._tintRGB + (alpha * 255 << 24);\n\n\t\t\t\tthis.fillVertices(float32View, uint32View, index, sprite, argb, nextTexture._virtalBoundId);\n\n\t\t\t\tindex += this.vertSize * 4;\n\t\t\t}\n\n\t\t\tcurrentGroup.size = i - currentGroup.start;\n\n\t\t\tif (!settings.CAN_UPLOAD_SAME_BUFFER) {\n\t\t\t\t// this is still needed for IOS performance..\n\t\t\t\t// it really does not like uploading to the same buffer in a single frame!\n\t\t\t\tif (this.vaoMax <= this.vertexCount) {\n\t\t\t\t\tthis.vaoMax++;\n\n\t\t\t\t\tconst attrs = this.shader.attributes;\n\n\t\t\t\t\t/* eslint-disable max-len */\n\t\t\t\t\tconst vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\t\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t\t\tthis.vaos[this.vertexCount] = this.createVao(vertexBuffer);\n\t\t\t\t}\n\n\t\t\t\tthis.renderer.bindVao(this.vaos[this.vertexCount]);\n\n\t\t\t\tthis.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n\n\t\t\t\tthis.vertexCount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// lets use the faster option, always use buffer number 0\n\t\t\t\tthis.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n\t\t\t}\n\n\t\t\tcurrentUniforms = null;\n\n\t\t\t// / render the groups..\n\t\t\tfor (i = 0; i < groupCount; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst groupTextureCount = group.textureCount;\n\n\t\t\t\tif (group.uniforms !== currentUniforms) {\n\t\t\t\t\tthis.syncUniforms(group.uniforms);\n\t\t\t\t}\n\n\t\t\t\tfor (let j = 0; j < groupTextureCount; j++) {\n\t\t\t\t\tthis.renderer.bindTexture(group.textures[j], j, true);\n\t\t\t\t\tgroup.textures[j]._virtalBoundId = -1;\n\n\t\t\t\t\tconst v = this.shader.uniforms.samplerSize;\n\t\t\t\t\tif (v) {\n\t\t\t\t\t\tv[0] = group.textures[j].realWidth;\n\t\t\t\t\t\tv[1] = group.textures[j].realHeight;\n\t\t\t\t\t\tthis.shader.uniforms.samplerSize = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set the blend mode..\n\t\t\t\tthis.renderer.state.setBlendMode(group.blend);\n\n\t\t\t\tgl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\n\t\t\t}\n\n\t\t\t// reset elements for the next flush\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\t/**\n\t\t * Starts a new sprite batch.\n\t\t */\n\t\tstart() {\n\t\t\tthis.renderer.bindShader(this.shader);\n\n\t\t\tif (settings.CAN_UPLOAD_SAME_BUFFER) {\n\t\t\t\t// bind buffer #0, we don't need others\n\t\t\t\tthis.renderer.bindVao(this.vaos[this.vertexCount]);\n\n\t\t\t\tthis.vertexBuffers[this.vertexCount].bind();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Stops and flushes the current batch.\n\t\t *\n\t\t */\n\t\tstop() {\n\t\t\tthis.flush();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the SpriteRenderer.\n\t\t *\n\t\t */\n\t\tdestroy() {\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\n\t\t\t\tif (this.vertexBuffers[i]) {\n\t\t\t\t\tthis.vertexBuffers[i].destroy();\n\t\t\t\t}\n\t\t\t\tif (this.vaos[i]) {\n\t\t\t\t\tthis.vaos[i].destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.indexBuffer) {\n\t\t\t\tthis.indexBuffer.destroy();\n\t\t\t}\n\n\t\t\tthis.renderer.off('prerender', this.onPrerender, this);\n\n\t\t\tsuper.destroy();\n\n\t\t\tif (this.shader) {\n\t\t\t\tthis.shader.destroy();\n\t\t\t\tthis.shader = null;\n\t\t\t}\n\n\t\t\tthis.vertexBuffers = null;\n\t\t\tthis.vaos = null;\n\t\t\tthis.indexBuffer = null;\n\t\t\tthis.indices = null;\n\n\t\t\tthis.sprites = null;\n\n\t\t\tfor (let i = 0; i < this.buffers.length; ++i) {\n\t\t\t\tthis.buffers[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n    import PointLike = PIXI.PointLike;\n\n    const p = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\n    const a = [0, 0, 0, 0];\n\n    export abstract class Surface implements IWorldTransform {\n        surfaceID = \"default\";\n\n        _updateID: number = 0;\n\n        vertexSrc: string = \"\";\n        fragmentSrc: string = \"\";\n\n        fillUniforms(uniforms: any) {\n\n        }\n\n        clear() {\n\n        }\n\n        /**\n         * made for bilinear, other things will need adjustments, like test if (0) is inside\n         * @param {ArrayLike<number>} v\n         * @param out\n         * @param {PIXI.Matrix} after\n         */\n        boundsQuad(v: ArrayLike<number>, out: any, after?: PIXI.Matrix) {\n            let minX = out[0], minY = out[1];\n            let maxX = out[0], maxY = out[1];\n            for (let i = 2; i < 8; i += 2) {\n                if (minX > out[i]) minX = out[i];\n                if (maxX < out[i]) maxX = out[i];\n                if (minY > out[i + 1]) minY = out[i + 1];\n                if (maxY < out[i + 1]) maxY = out[i + 1];\n            }\n\n            p[0].set(minX, minY);\n            this.apply(p[0], p[0]);\n            p[1].set(maxX, minY);\n            this.apply(p[1], p[1]);\n            p[2].set(maxX, maxY);\n            this.apply(p[2], p[2]);\n            p[3].set(minX, maxY);\n            this.apply(p[3], p[3]);\n\n            if (after) {\n                after.apply(p[0], p[0]);\n                after.apply(p[1], p[1]);\n                after.apply(p[2], p[2]);\n                after.apply(p[3], p[3]);\n                out[0] = p[0].x;\n                out[1] = p[0].y;\n                out[2] = p[1].x;\n                out[3] = p[1].y;\n                out[4] = p[2].x;\n                out[5] = p[2].y;\n                out[6] = p[3].x;\n                out[7] = p[3].y;\n            } else {\n                for (let i = 1; i <= 3; i++) {\n                    if (p[i].y < p[0].y || p[i].y == p[0].y && p[i].x < p[0].x) {\n                        let t = p[0];\n                        p[0] = p[i];\n                        p[i] = t;\n                    }\n                }\n\n                for (let i = 1; i <= 3; i++) {\n                    a[i] = Math.atan2(p[i].y - p[0].y, p[i].x - p[0].x);\n                }\n                for (let i = 1; i <= 3; i++) {\n                    for (let j = i + 1; j <= 3; j++) {\n                        if (a[i] > a[j]) {\n                            let t = p[i];\n                            p[i] = p[j];\n                            p[j] = t;\n                            let t2 = a[i];\n                            a[i] = a[j];\n                            a[j] = t2;\n                        }\n                    }\n                }\n\n                out[0] = p[0].x;\n                out[1] = p[0].y;\n                out[2] = p[1].x;\n                out[3] = p[1].y;\n                out[4] = p[2].x;\n                out[5] = p[2].y;\n                out[6] = p[3].x;\n                out[7] = p[3].y;\n\n                if ((p[3].x - p[2].x) * (p[1].y - p[2].y) - (p[1].x - p[2].x) * (p[3].y - p[2].y) < 0) {\n                    //triangle!!!\n                    out[4] = p[3].x;\n                    out[5] = p[3].y;\n                    return;\n                }\n            }\n        }\n\n        abstract apply(pos: PointLike, newPos: PointLike): PointLike;\n\n        //TODO: remove props\n        abstract applyInverse(pos: PointLike, newPos: PointLike): PointLike;\n    }\n}\n","namespace pixi_projection {\n    import PointLike = PIXI.PointLike;\n\n    const tempMat = new PIXI.Matrix();\n    const tempRect = new PIXI.Rectangle();\n    const tempPoint = new PIXI.Point();\n\n    export class BilinearSurface extends Surface {\n        distortion = new PIXI.Point();\n\n        constructor() {\n            super();\n        }\n\n        clear() {\n            this.distortion.set(0, 0);\n        }\n\n        apply(pos: PointLike, newPos?: PointLike): PointLike {\n            newPos = newPos || new PIXI.Point();\n            const d = this.distortion;\n            const m = pos.x * pos.y;\n            newPos.x = pos.x + d.x * m;\n            newPos.y = pos.y + d.y * m;\n            return newPos;\n        }\n\n        applyInverse(pos: PointLike, newPos: PointLike): PointLike {\n            newPos = newPos || new PIXI.Point();\n            const vx = pos.x, vy = pos.y;\n            const dx = this.distortion.x, dy = this.distortion.y;\n\n            if (dx == 0.0) {\n                newPos.x = vx;\n                newPos.y = vy / (1.0 + dy * vx);\n            } else\n            if (dy == 0.0) {\n                newPos.y = vy;\n                newPos.x = vx/ (1.0 + dx * vy);\n            } else {\n                const b = (vy * dx - vx * dy + 1.0) * 0.5 / dy;\n                const d = b * b + vx / dy;\n\n                if (d <= 0.00001) {\n                    newPos.set(NaN, NaN);\n                    return;\n                }\n                if (dy > 0.0) {\n                    newPos.x = - b + Math.sqrt(d);\n                } else {\n                    newPos.x = - b - Math.sqrt(d);\n                }\n                newPos.y = (vx / newPos.x - 1.0) / dx;\n            }\n            return newPos;\n        }\n\n        mapSprite(sprite: PIXI.Sprite, quad: Array<PointLike>, outTransform?: PIXI.TransformStatic) {\n            const tex = sprite.texture;\n\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\n            tempRect.width = tex.orig.width;\n            tempRect.height = tex.orig.height;\n\n            return this.mapQuad(tempRect, quad, outTransform || sprite.transform as PIXI.TransformStatic);\n        }\n\n        mapQuad(rect: PIXI.Rectangle, quad: Array<PointLike>, outTransform: PIXI.TransformStatic) {\n            const ax = -rect.x / rect.width;\n            const ay = -rect.y / rect.height;\n\n            const ax2 = (1.0 - rect.x) / rect.width;\n            const ay2 = (1.0 - rect.y) / rect.height;\n\n            const up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\n            const up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\n            const up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\n            const up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\n\n            const down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\n            const down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\n            const down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\n            const down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\n\n            const x00 = up1x * (1.0 - ay) + down1x * ay;\n            const y00 = up1y * (1.0 - ay) + down1y * ay;\n\n            const x10 = up2x * (1.0 - ay) + down2x * ay;\n            const y10 = up2y * (1.0 - ay) + down2y * ay;\n\n            const x01 = up1x * (1.0 - ay2) + down1x * ay2;\n            const y01 = up1y * (1.0 - ay2) + down1y * ay2;\n\n            const x11 = up2x * (1.0 - ay2) + down2x * ay2;\n            const y11 = up2y * (1.0 - ay2) + down2y * ay2;\n\n            const mat = tempMat;\n            mat.tx = x00;\n            mat.ty = y00;\n            mat.a = x10 - x00;\n            mat.b = y10 - y00;\n            mat.c = x01 - x00;\n            mat.d = y01 - y00;\n            tempPoint.set(x11, y11);\n            mat.applyInverse(tempPoint, tempPoint);\n            this.distortion.set(tempPoint.x - 1, tempPoint.y - 1);\n\n            outTransform.setFromMatrix(mat);\n\n            return this;\n        }\n\n        fillUniforms(uniforms: any) {\n            uniforms.distortion = uniforms.distortion || new Float32Array([0, 0, 0, 0]);\n            const ax = Math.abs(this.distortion.x);\n            const ay = Math.abs(this.distortion.y);\n\n            uniforms.distortion[0] = ax * 10000 <= ay ? 0 : this.distortion.x;\n            uniforms.distortion[1] = ay * 10000 <= ax ? 0 : this.distortion.y;\n            uniforms.distortion[2] = 1.0 / uniforms.distortion[0];\n            uniforms.distortion[3] = 1.0 / uniforms.distortion[1];\n        }\n    }\n}\n","namespace pixi_projection {\n    export class Container2s extends PIXI.Container {\n        constructor() {\n            super();\n            this.proj = new ProjectionSurface(this.transform);\n        }\n\n        proj: ProjectionSurface;\n\n        get worldTransform() {\n            return this.proj as any;\n        }\n    }\n}\n","declare namespace PIXI {\n\tinterface Matrix extends pixi_projection.IWorldTransform {\n\t\tapply(pos: PointLike, newPos?: PointLike): PointLike;\n\n\t\tapplyInverse(pos: PointLike, newPos?: PointLike): PointLike;\n\t}\n}\n\nnamespace pixi_projection {\n\timport PointLike = PIXI.PointLike;\n\n\tconst fun = PIXI.TransformStatic.prototype.updateTransform;\n\n\texport interface IWorldTransform {\n\t\tapply(pos: PointLike, newPos: PointLike): PointLike;\n\n\t\t//TODO: remove props\n\t\tapplyInverse(pos: PointLike, newPos: PointLike): PointLike;\n\t}\n\n\tfunction transformHack(this: PIXI.TransformStatic, parentTransform: PIXI.TransformBase): IWorldTransform {\n\t\tconst proj = this.proj as ProjectionSurface;\n\n\t\tconst pp = parentTransform.proj as ProjectionSurface;\n\t\tconst ta = this as any;\n\n\t\tif (!pp) {\n\t\t\tfun.call(this, parentTransform);\n\t\t\tproj._activeProjection = null;\n\t\t\treturn;\n\t\t}\n\n\t\tif (pp._surface) {\n\t\t\tproj._activeProjection = pp;\n\t\t\tthis.updateLocalTransform();\n\t\t\tthis.localTransform.copy(this.worldTransform);\n\t\t\tif (ta._parentID < 0) {\n\t\t\t\t++ta._worldID;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tfun.call(this, parentTransform);\n\t\tproj._activeProjection = pp._activeProjection;\n\t}\n\n\texport class ProjectionSurface extends Projection {\n\t\tconstructor(legacy: PIXI.TransformBase, enable?: boolean) {\n\t\t\tsuper(legacy, enable);\n\t\t}\n\n\t\t_surface: Surface = null;\n\t\t_activeProjection: ProjectionSurface = null;\n\n\t\tset enabled(value: boolean) {\n\t\t\tif (value === this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._enabled = value;\n\t\t\tif (value) {\n\t\t\t\tthis.legacy.updateTransform = transformHack;\n\t\t\t\t(this.legacy as any)._parentID = -1;\n\t\t\t} else {\n\t\t\t\tthis.legacy.updateTransform = PIXI.TransformStatic.prototype.updateTransform;\n\t\t\t\t(this.legacy as any)._parentID = -1;\n\t\t\t}\n\t\t}\n\n\t\tget surface() {\n\t\t\treturn this._surface;\n\t\t}\n\n\t\tset surface(value: Surface) {\n\t\t\tif (this._surface == value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._surface = value || null;\n\t\t\t(this.legacy as any)._parentID = -1;\n\t\t}\n\n\t\tapplyPartial(pos: PointLike, newPos?: PointLike): PointLike {\n\t\t\tif (this._activeProjection !== null) {\n\t\t\t\tnewPos = this.legacy.worldTransform.apply(pos, newPos);\n\t\t\t\treturn this._activeProjection.surface.apply(newPos, newPos);\n\t\t\t}\n\t\t\tif (this._surface !== null) {\n\t\t\t\treturn this.surface.apply(pos, newPos);\n\t\t\t}\n\t\t\treturn this.legacy.worldTransform.apply(pos, newPos);\n\t\t}\n\n\t\tapply(pos: PointLike, newPos?: PointLike): PointLike {\n\t\t\tif (this._activeProjection !== null) {\n\t\t\t\tnewPos = this.legacy.worldTransform.apply(pos, newPos);\n\t\t\t\tthis._activeProjection.surface.apply(newPos, newPos);\n\t\t\t\treturn this._activeProjection.legacy.worldTransform.apply(newPos, newPos);\n\t\t\t}\n\t\t\tif (this._surface !== null) {\n\t\t\t\tnewPos = this.surface.apply(pos, newPos);\n\t\t\t\treturn this.legacy.worldTransform.apply(newPos, newPos);\n\t\t\t}\n\t\t\treturn this.legacy.worldTransform.apply(pos, newPos);\n\t\t}\n\n\t\tapplyInverse(pos: PointLike, newPos: PointLike) {\n\t\t\tif (this._activeProjection !== null) {\n\t\t\t\tnewPos = this._activeProjection.legacy.worldTransform.applyInverse(pos, newPos);\n\t\t\t\tthis._activeProjection._surface.applyInverse(newPos, newPos);\n\t\t\t\treturn this.legacy.worldTransform.applyInverse(newPos, newPos);\n\t\t\t}\n\t\t\tif (this._surface !== null) {\n\t\t\t\tnewPos = this.legacy.worldTransform.applyInverse(pos, newPos);\n\t\t\t\treturn this._surface.applyInverse(newPos, newPos);\n\t\t\t}\n\t\t\treturn this.legacy.worldTransform.applyInverse(pos, newPos);\n\t\t}\n\n\t\tmapBilinearSprite(sprite: PIXI.Sprite, quad: Array<PointLike>) {\n\t\t\tif (!(this._surface instanceof BilinearSurface)) {\n\t\t\t\tthis.surface = new BilinearSurface();\n\t\t\t}\n\t\t\t(this.surface as BilinearSurface).mapSprite(sprite, quad, this.legacy);\n\t\t}\n\n\t\t_currentSurfaceID = -1;\n\t\t_currentLegacyID = -1;\n\t\t_lastUniforms : any = null;\n\n\t\tclear() {\n\t\t\tif (this.surface) {\n\t\t\t\tthis.surface.clear();\n\t\t\t}\n\t\t}\n\n\t\tget uniforms(): any {\n\t\t\tif (this._currentLegacyID === (this.legacy as any)._worldID &&\n\t\t\t\tthis._currentSurfaceID === this.surface._updateID) {\n\n\t\t\t\treturn this._lastUniforms;\n\t\t\t}\n\n\t\t\tthis._lastUniforms = this._lastUniforms || {};\n\t\t\tthis._lastUniforms.worldTransform = this.legacy.worldTransform.toArray(true)\n\t\t\tthis._surface.fillUniforms(this._lastUniforms);\n\t\t\treturn this._lastUniforms;\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n    import MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\n\n    class SpriteBilinearRenderer extends MultiTextureSpriteRenderer {\n        size = 100;\n        MAX_TEXTURES_LOCAL = 1;\n\n        shaderVert = `precision highp float;\nattribute vec2 aVertexPosition;\nattribute vec3 aTrans1;\nattribute vec3 aTrans2;\nattribute vec4 aFrame;\nattribute vec4 aColor;\nattribute float aTextureId;\n\nuniform mat3 projectionMatrix;\nuniform mat3 worldTransform;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vTrans1;\nvarying vec3 vTrans2;\nvarying vec4 vFrame;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nvoid main(void){\n    gl_Position.xyw = projectionMatrix * worldTransform * vec3(aVertexPosition, 1.0);\n    gl_Position.z = 0.0;\n    \n    vTextureCoord = aVertexPosition;\n    vTrans1 = aTrans1;\n    vTrans2 = aTrans2;\n    vTextureId = aTextureId;\n    vColor = aColor;\n    vFrame = aFrame;\n}\n`;\n        //TODO: take non-premultiplied case into account\n\n        shaderFrag = `precision highp float;\nvarying vec2 vTextureCoord;\nvarying vec3 vTrans1;\nvarying vec3 vTrans2;\nvarying vec4 vFrame;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nuniform sampler2D uSamplers[%count%];\nuniform vec2 samplerSize[%count%]; \nuniform vec4 distortion;\n\nvoid main(void){\nvec2 surface;\nvec2 surface2;\n\nfloat vx = vTextureCoord.x;\nfloat vy = vTextureCoord.y;\nfloat dx = distortion.x;\nfloat dy = distortion.y;\nfloat revx = distortion.z;\nfloat revy = distortion.w;\n\nif (distortion.x == 0.0) {\n    surface.x = vx;\n    surface.y = vy / (1.0 + dy * vx);\n    surface2 = surface;\n} else\nif (distortion.y == 0.0) {\n    surface.y = vy;\n    surface.x = vx/ (1.0 + dx * vy);\n    surface2 = surface;\n} else {\n    float c = vy * dx - vx * dy;\n    float b = (c + 1.0) * 0.5;\n    float b2 = (-c + 1.0) * 0.5;\n    float d = b * b + vx * dy;\n    if (d < -0.00001) {\n        discard;\n    }\n    d = sqrt(max(d, 0.0));\n    surface.x = (- b + d) * revy;\n    surface2.x = (- b - d) * revy;\n    surface.y = (- b2 + d) * revx;\n    surface2.y = (- b2 - d) * revx;\n}\n\nvec2 uv;\nuv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;\nuv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;\n\nvec2 pixels = uv * samplerSize[0];\n\nif (pixels.x < vFrame.x || pixels.x > vFrame.z ||\n    pixels.y < vFrame.y || pixels.y > vFrame.w) {\n    uv.x = vTrans1.x * surface2.x + vTrans1.y * surface2.y + vTrans1.z;\n    uv.y = vTrans2.x * surface2.x + vTrans2.y * surface2.y + vTrans2.z;\n    pixels = uv * samplerSize[0];\n    \n    if (pixels.x < vFrame.x || pixels.x > vFrame.z ||\n        pixels.y < vFrame.y || pixels.y > vFrame.w) {\n        discard;\n    }\n}\n\nvec4 edge;\nedge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\nedge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\n\nfloat alpha = 1.0; //edge.x * edge.y * edge.z * edge.w;\nvec4 rColor = vColor * alpha;\n\nfloat textureId = floor(vTextureId+0.5);\nvec4 color;\nvec2 textureCoord = uv;\n%forloop%\ngl_FragColor = color * rColor;\n}`;\n\n        defUniforms = {\n            worldTransform: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),\n            distortion: new Float32Array([0, 0])\n        };\n\n        getUniforms(sprite: PIXI.Sprite) {\n            let proj = (sprite as Sprite2s).proj;\n            let shader = this.shader;\n\n            if (proj.surface !== null) {\n                return proj.uniforms;\n            }\n            if (proj._activeProjection !== null) {\n                return proj._activeProjection.uniforms;\n            }\n            return this.defUniforms;\n        }\n\n        createVao(vertexBuffer: PIXI.glCore.GLBuffer) {\n            const attrs = this.shader.attributes;\n            this.vertSize = 14;\n            this.vertByteSize = this.vertSize * 4;\n\n            const gl = this.renderer.gl;\n            const vao = this.renderer.createVao()\n                .addIndex(this.indexBuffer)\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                .addAttribute(vertexBuffer, attrs.aTrans1, gl.FLOAT, false, this.vertByteSize, 2 * 4)\n                .addAttribute(vertexBuffer, attrs.aTrans2, gl.FLOAT, false, this.vertByteSize, 5 * 4)\n                .addAttribute(vertexBuffer, attrs.aFrame, gl.FLOAT, false, this.vertByteSize, 8 * 4)\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 12 * 4);\n\n            if (attrs.aTextureId) {\n                vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 13 * 4);\n            }\n\n            return vao;\n\n        }\n\n        fillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, argb: number, textureId: number) {\n            const vertexData = sprite.vertexData;\n            const tex = sprite._texture;\n            const w = tex.orig.width;\n            const h = tex.orig.height;\n            const ax = sprite._anchor._x;\n            const ay = sprite._anchor._y;\n            const frame = tex._frame;\n            const aTrans = sprite.aTrans;\n\n            for (let i = 0; i < 4; i++) {\n                float32View[index] = vertexData[i * 2];\n                float32View[index + 1] = vertexData[i * 2 + 1];\n\n                float32View[index + 2] = aTrans.a;\n                float32View[index + 3] = aTrans.c;\n                float32View[index + 4] = aTrans.tx;\n                float32View[index + 5] = aTrans.b;\n                float32View[index + 6] = aTrans.d;\n                float32View[index + 7] = aTrans.ty;\n\n                float32View[index + 8] = frame.x;\n                float32View[index + 9] = frame.y;\n                float32View[index + 10] = frame.x + frame.width;\n                float32View[index + 11] = frame.y + frame.height;\n\n                uint32View[index + 12] = argb;\n                float32View[index + 13] = textureId;\n                index += 14;\n            }\n        }\n    }\n\n    PIXI.WebGLRenderer.registerPlugin('sprite_bilinear', SpriteBilinearRenderer);\n}\n","namespace pixi_projection {\n\timport MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\n\n\tclass SpriteStrangeRenderer extends MultiTextureSpriteRenderer {\n\t\tsize = 100;\n\t\tMAX_TEXTURES_LOCAL = 1;\n\n\t\tshaderVert = `precision highp float;\nattribute vec2 aVertexPosition;\nattribute vec3 aTrans1;\nattribute vec3 aTrans2;\nattribute vec4 aFrame;\nattribute vec4 aColor;\nattribute float aTextureId;\n\nuniform mat3 projectionMatrix;\nuniform mat3 worldTransform;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vTrans1;\nvarying vec3 vTrans2;\nvarying vec4 vFrame;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nvoid main(void){\n    gl_Position.xyw = projectionMatrix * worldTransform * vec3(aVertexPosition, 1.0);\n    gl_Position.z = 0.0;\n    \n    vTextureCoord = aVertexPosition;\n    vTrans1 = aTrans1;\n    vTrans2 = aTrans2;\n    vTextureId = aTextureId;\n    vColor = aColor;\n    vFrame = aFrame;\n}\n`;\n\t\t//TODO: take non-premultiplied case into account\n\n\t\tshaderFrag = `precision highp float;\nvarying vec2 vTextureCoord;\nvarying vec3 vTrans1;\nvarying vec3 vTrans2;\nvarying vec4 vFrame;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nuniform sampler2D uSamplers[%count%];\nuniform vec2 samplerSize[%count%]; \nuniform vec4 params;\n\nvoid main(void){\nvec2 surface;\n\nfloat vx = vTextureCoord.x;\nfloat vy = vTextureCoord.y;\nfloat aleph = params.x;\nfloat bet = params.y;\nfloat A = params.z;\nfloat B = params.w;\n\nif (aleph == 0.0) {\n\tsurface.y = vy / (1.0 + vx * bet);\n\tsurface.x = vx;\n}\nelse if (bet == 0.0) {\n\tsurface.x = vx / (1.0 + vy * aleph);\n\tsurface.y = vy;\n} else {\n\tsurface.x = vx * (bet + 1.0) / (bet + 1.0 + vy * aleph);\n\tsurface.y = vy * (aleph + 1.0) / (aleph + 1.0 + vx * bet);\n}\n\nvec2 uv;\nuv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;\nuv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;\n\nvec2 pixels = uv * samplerSize[0];\n\nvec4 edge;\nedge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\nedge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\n\nfloat alpha = edge.x * edge.y * edge.z * edge.w;\nvec4 rColor = vColor * alpha;\n\nfloat textureId = floor(vTextureId+0.5);\nvec4 color;\nvec2 textureCoord = uv;\n%forloop%\ngl_FragColor = color * rColor;\n}`;\n\n\t\tdefUniforms = {\n\t\t\tworldTransform: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),\n\t\t\tdistortion: new Float32Array([0, 0])\n\t\t};\n\n\t\tgetUniforms(sprite: PIXI.Sprite) {\n\t\t\tlet proj = (sprite as Sprite2s).proj;\n\t\t\tlet shader = this.shader;\n\n\t\t\tif (proj.surface !== null) {\n\t\t\t\treturn proj.uniforms;\n\t\t\t}\n\t\t\tif (proj._activeProjection !== null) {\n\t\t\t\treturn proj._activeProjection.uniforms;\n\t\t\t}\n\t\t\treturn this.defUniforms;\n\t\t}\n\n\t\tcreateVao(vertexBuffer: PIXI.glCore.GLBuffer) {\n\t\t\tconst attrs = this.shader.attributes;\n\t\t\tthis.vertSize = 14;\n\t\t\tthis.vertByteSize = this.vertSize * 4;\n\n\t\t\tconst gl = this.renderer.gl;\n\t\t\tconst vao = this.renderer.createVao()\n\t\t\t\t.addIndex(this.indexBuffer)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTrans1, gl.FLOAT, false, this.vertByteSize, 2 * 4)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTrans2, gl.FLOAT, false, this.vertByteSize, 5 * 4)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aFrame, gl.FLOAT, false, this.vertByteSize, 8 * 4)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 12 * 4);\n\n\t\t\tif (attrs.aTextureId) {\n\t\t\t\tvao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 13 * 4);\n\t\t\t}\n\n\t\t\treturn vao;\n\n\t\t}\n\n\t\tfillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, argb: number, textureId: number) {\n\t\t\tconst vertexData = sprite.vertexData;\n\t\t\tconst tex = sprite._texture;\n\t\t\tconst w = tex.orig.width;\n\t\t\tconst h = tex.orig.height;\n\t\t\tconst ax = sprite._anchor._x;\n\t\t\tconst ay = sprite._anchor._y;\n\t\t\tconst frame = tex._frame;\n\t\t\tconst aTrans = sprite.aTrans;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfloat32View[index] = vertexData[i * 2];\n\t\t\t\tfloat32View[index + 1] = vertexData[i * 2 + 1];\n\n\t\t\t\tfloat32View[index + 2] = aTrans.a;\n\t\t\t\tfloat32View[index + 3] = aTrans.c;\n\t\t\t\tfloat32View[index + 4] = aTrans.tx;\n\t\t\t\tfloat32View[index + 5] = aTrans.b;\n\t\t\t\tfloat32View[index + 6] = aTrans.d;\n\t\t\t\tfloat32View[index + 7] = aTrans.ty;\n\n\t\t\t\tfloat32View[index + 8] = frame.x;\n\t\t\t\tfloat32View[index + 9] = frame.y;\n\t\t\t\tfloat32View[index + 10] = frame.x + frame.width;\n\t\t\t\tfloat32View[index + 11] = frame.y + frame.height;\n\n\t\t\t\tuint32View[index + 12] = argb;\n\t\t\t\tfloat32View[index + 13] = textureId;\n\t\t\t\tindex += 14;\n\t\t\t}\n\t\t}\n\t}\n\n\tPIXI.WebGLRenderer.registerPlugin('sprite_strange', SpriteStrangeRenderer);\n}\n","namespace pixi_projection {\n    import PointLike = PIXI.PointLike;\n    import WebGLState = PIXI.WebGLState;\n\n    const tempMat = new PIXI.Matrix();\n    const tempRect = new PIXI.Rectangle();\n    const tempPoint = new PIXI.Point();\n\n    export class StrangeSurface extends Surface {\n        constructor() {\n            super();\n        }\n\n        params = [0, 0, NaN, NaN];\n\n        clear() {\n            let p = this.params;\n            p[0] = 0;\n            p[1] = 0;\n            p[2] = NaN;\n            p[3] = NaN;\n        }\n\n        setAxisX(pos: PointLike, factor: number, outTransform: PIXI.TransformStatic) {\n            const x = pos.x, y = pos.y;\n            //TODO: check x=0, y=0\n\n            let d = Math.sqrt(x * x + y * y);\n            let rot = outTransform.rotation;\n            if (rot !== 0) {\n                outTransform.skew._x -= rot;\n                outTransform.skew._y += rot;\n                outTransform.rotation = 0;\n            }\n            outTransform.skew.y = Math.atan2(y, x);\n\n            let p = this.params;\n\n            if (factor !== 0) {\n                p[2] = -d * factor;\n            } else {\n                p[2] = NaN;\n            }\n            this._calc01();\n        }\n\n        setAxisY(pos: PointLike, factor: number, outTransform: PIXI.TransformStatic) {\n            const x = pos.x, y = pos.y;\n\n            //TODO: check if axis x and axis y is the same\n\n            let d = Math.sqrt(x * x + y * y);\n            let rot = outTransform.rotation;\n            if (rot !== 0) {\n                outTransform.skew._x -= rot;\n                outTransform.skew._y += rot;\n                outTransform.rotation = 0;\n            }\n            outTransform.skew.x = -Math.atan2(y, x) + Math.PI / 2;\n\n            let p = this.params;\n\n            if (factor !== 0) {\n                p[3] = -d * factor;\n            } else {\n                p[3] = NaN;\n            }\n            this._calc01();\n        }\n\n        _calc01() {\n            let p = this.params;\n            if (isNaN(p[2])) {\n                p[1] = 0;\n                if (isNaN(p[3])) {\n                    p[0] = 0;\n                } else {\n                    p[0] = 1.0 / p[3];\n                }\n            } else {\n                if (isNaN(p[3])) {\n                    p[0] = 0;\n                    p[1] = 1.0 / p[2];\n                } else {\n                    const d = 1.0 - p[2] * p[3];\n                    p[0] = (1.0 - p[2]) / d;\n                    p[1] = (1.0 - p[3]) / d;\n                }\n            }\n        }\n\n        apply(pos: PointLike, newPos?: PointLike): PointLike {\n            newPos = newPos || new PIXI.Point();\n\n            const aleph = this.params[0], bet = this.params[1], A = this.params[2], B = this.params[3];\n            const u = pos.x, v = pos.y;\n\n            if (aleph === 0.0) {\n                newPos.y = v * (1 + u * bet);\n                newPos.x = u;\n            }\n            else if (bet === 0.0) {\n                newPos.x = u * (1 + v * aleph);\n                newPos.y = v;\n            } else {\n                const D = A * B - v * u;\n                newPos.x = A * u * (B + v) / D;\n                newPos.y = B * v * (A + u) / D;\n            }\n            return newPos;\n        }\n\n        applyInverse(pos: PointLike, newPos: PointLike): PointLike {\n            newPos = newPos || new PIXI.Point();\n\n            const aleph = this.params[0], bet = this.params[1], A = this.params[2], B = this.params[3];\n            const x = pos.x, y = pos.y;\n\n            if (aleph === 0.0) {\n                newPos.y = y / (1 + x * bet);\n                newPos.x = x;\n            }\n            else if (bet === 0.0) {\n                newPos.x = x * (1 + y * aleph);\n                newPos.y = y;\n            } else {\n                newPos.x = x * (bet + 1) / (bet + 1 + y * aleph);\n                newPos.y = y * (aleph + 1) / (aleph + 1 + x * bet);\n            }\n            return newPos;\n        }\n\n        mapSprite(sprite: PIXI.Sprite, quad: Array<PointLike>, outTransform?: PIXI.TransformStatic) {\n            const tex = sprite.texture;\n\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\n            tempRect.width = tex.orig.width;\n            tempRect.height = tex.orig.height;\n\n            return this.mapQuad(tempRect, quad, outTransform || sprite.transform as PIXI.TransformStatic);\n        }\n\n        mapQuad(rect: PIXI.Rectangle, quad: Array<PointLike>, outTransform: PIXI.TransformStatic) {\n            const ax = -rect.x / rect.width;\n            const ay = -rect.y / rect.height;\n\n            const ax2 = (1.0 - rect.x) / rect.width;\n            const ay2 = (1.0 - rect.y) / rect.height;\n\n            const up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\n            const up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\n            const up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\n            const up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\n\n            const down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\n            const down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\n            const down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\n            const down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\n\n            const x00 = up1x * (1.0 - ay) + down1x * ay;\n            const y00 = up1y * (1.0 - ay) + down1y * ay;\n\n            const x10 = up2x * (1.0 - ay) + down2x * ay;\n            const y10 = up2y * (1.0 - ay) + down2y * ay;\n\n            const x01 = up1x * (1.0 - ay2) + down1x * ay2;\n            const y01 = up1y * (1.0 - ay2) + down1y * ay2;\n\n            const x11 = up2x * (1.0 - ay2) + down2x * ay2;\n            const y11 = up2y * (1.0 - ay2) + down2y * ay2;\n\n            const mat = tempMat;\n            mat.tx = x00;\n            mat.ty = y00;\n            mat.a = x10 - x00;\n            mat.b = y10 - y00;\n            mat.c = x01 - x00;\n            mat.d = y01 - y00;\n            tempPoint.set(x11, y11);\n            mat.applyInverse(tempPoint, tempPoint);\n            // this.distortion.set(tempPoint.x - 1, tempPoint.y - 1);\n\n            outTransform.setFromMatrix(mat);\n\n            return this;\n        }\n\n        fillUniforms(uniforms: any) {\n            const params = this.params;\n            const distortion = uniforms.params || new Float32Array([0, 0, 0, 0]);\n\n            uniforms.params = distortion;\n            distortion[0] = params[0];\n            distortion[1] = params[1];\n            distortion[2] = params[2];\n            distortion[3] = params[3];\n        }\n    }\n}\n","declare module PIXI {\n\tinterface Sprite {\n\t\tconvertTo2s(): void;\n\t}\n\n\tinterface Container {\n\t\tconvertTo2s(): void;\n\n\t\tconvertSubtreeTo2s(): void;\n\t}\n}\n\nnamespace pixi_projection {\n\t(PIXI as any).Sprite.prototype.convertTo2s = function () {\n\t\tif (this.proj) return;\n\t\t//cointainer\n\t\tthis.pluginName = 'sprite_bilinear';\n\t\tthis.aTrans = new PIXI.Matrix();\n\t\tthis.calculateVertices = Sprite2s.prototype.calculateVertices;\n\t\tthis.calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\n\t\tthis._calculateBounds = Sprite2s.prototype._calculateBounds;\n\t\tPIXI.Container.prototype.convertTo2s.call(this);\n\t};\n\n\t(PIXI as any).Container.prototype.convertTo2s = function () {\n\t\tif (this.proj) return;\n\t\tthis.proj = new Projection2d(this.transform);\n\t\tObject.defineProperty(this, \"worldTransform\", {\n\t\t\tget: function () {\n\t\t\t\treturn this.proj;\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t};\n\n\t(PIXI as any).Container.prototype.convertSubtreeTo2s = function () {\n\t\tthis.convertTo2s();\n\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].convertSubtreeTo2s();\n\t\t}\n\t};\n}\n","namespace pixi_projection {\n\texport class Sprite2s extends PIXI.Sprite {\n\t\tconstructor(texture: PIXI.Texture) {\n\t\t\tsuper(texture);\n\t\t\tthis.proj = new ProjectionSurface(this.transform);\n\t\t\tthis.pluginName = 'sprite_bilinear';\n\t\t}\n\n\t\tproj: ProjectionSurface;\n\t\taTrans = new PIXI.Matrix();\n\n\t\t_calculateBounds() {\n\t\t\tthis.calculateTrimmedVertices();\n\t\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\n\t\t}\n\n\t\tcalculateVertices() {\n\t\t\tconst wid = (this.transform as any)._worldID;\n\t\t\tconst tuid = (this._texture as any)._updateID;\n\t\t\tif (this._transformID === wid && this._textureID === tuid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transformID = wid;\n\t\t\tthis._textureID = tuid;\n\n\t\t\tconst texture = this._texture;\n\t\t\tconst vertexData = this.vertexData;\n\t\t\tconst trim = texture.trim;\n\t\t\tconst orig = texture.orig;\n\t\t\tconst anchor = this._anchor;\n\n\t\t\tlet w0 = 0;\n\t\t\tlet w1 = 0;\n\t\t\tlet h0 = 0;\n\t\t\tlet h1 = 0;\n\n\t\t\tif (trim) {\n\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\n\t\t\t\tw0 = w1 + trim.width;\n\n\t\t\t\th1 = trim.y - (anchor._y * orig.height);\n\t\t\t\th0 = h1 + trim.height;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw1 = -anchor._x * orig.width;\n\t\t\t\tw0 = w1 + orig.width;\n\n\t\t\t\th1 = -anchor._y * orig.height;\n\t\t\t\th0 = h1 + orig.height;\n\t\t\t}\n\n\t\t\tif (this.proj._surface) {\n\t\t\t\tvertexData[0] = w1;\n\t\t\t\tvertexData[1] = h1;\n\t\t\t\tvertexData[2] = w0;\n\t\t\t\tvertexData[3] = h1;\n\t\t\t\tvertexData[4] = w0;\n\t\t\t\tvertexData[5] = h0;\n\t\t\t\tvertexData[6] = w1;\n\t\t\t\tvertexData[7] = h0;\n\t\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData);\n\t\t\t} else {\n\t\t\t\tconst wt = this.transform.worldTransform;\n\t\t\t\tconst a = wt.a;\n\t\t\t\tconst b = wt.b;\n\t\t\t\tconst c = wt.c;\n\t\t\t\tconst d = wt.d;\n\t\t\t\tconst tx = wt.tx;\n\t\t\t\tconst ty = wt.ty;\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\n\t\t\t\tif (this.proj._activeProjection) {\n\t\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!texture.transform) {\n\t\t\t\ttexture.transform = new PIXI.extras.TextureTransform(texture);\n\t\t\t}\n\t\t\ttexture.transform.update();\n\n\t\t\tconst aTrans = this.aTrans;\n\t\t\taTrans.set(orig.width, 0, 0, orig.height, w1, h1);\n\t\t\tif (this.proj._surface === null) {\n\t\t\t\taTrans.prepend(this.transform.worldTransform);\n\t\t\t}\n\t\t\taTrans.invert();\n\t\t\taTrans.prepend(texture.transform.mapCoord);\n\t\t}\n\n\t\tcalculateTrimmedVertices() {\n\t\t\tconst wid = (this.transform as any)._worldID;\n\t\t\tconst tuid = (this._texture as any)._updateID;\n\t\t\tif (!this.vertexTrimmedData) {\n\t\t\t\tthis.vertexTrimmedData = new Float32Array(8);\n\t\t\t}\n\t\t\telse if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transformTrimmedID = wid;\n\t\t\tthis._textureTrimmedID = tuid;\n\n\t\t\t// lets do some special trim code!\n\t\t\tconst texture = this._texture;\n\t\t\tconst vertexData = this.vertexTrimmedData;\n\t\t\tconst orig = texture.orig;\n\t\t\tconst anchor = this._anchor;\n\n\t\t\t// lets calculate the new untrimmed bounds..\n\n\t\t\tconst w1 = -anchor._x * orig.width;\n\t\t\tconst w0 = w1 + orig.width;\n\n\t\t\tconst h1 = -anchor._y * orig.height;\n\t\t\tconst h0 = h1 + orig.height;\n\n\t\t\t//TODO: take rotations into account! form temporary bounds\n\n\t\t\tif (this.proj._surface) {\n\t\t\t\tvertexData[0] = w1;\n\t\t\t\tvertexData[1] = h1;\n\t\t\t\tvertexData[2] = w0;\n\t\t\t\tvertexData[3] = h1;\n\t\t\t\tvertexData[4] = w0;\n\t\t\t\tvertexData[5] = h0;\n\t\t\t\tvertexData[6] = w1;\n\t\t\t\tvertexData[7] = h0;\n\t\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData, this.transform.worldTransform);\n\t\t\t} else {\n\t\t\t\tlet wt = this.transform.worldTransform;\n\t\t\t\tlet a = wt.a;\n\t\t\t\tlet b = wt.b;\n\t\t\t\tlet c = wt.c;\n\t\t\t\tlet d = wt.d;\n\t\t\t\tlet tx = wt.tx;\n\t\t\t\tlet ty = wt.ty;\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\n\t\t\t\tif (this.proj._activeProjection) {\n\t\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData,\n\t\t\t\t\t\tthis.proj._activeProjection.legacy.worldTransform);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget worldTransform() {\n\t\t\treturn this.proj as any;\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n\texport class Text2s extends PIXI.Text {\n\t\tconstructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\n\t\t\tsuper(text, style, canvas);\n\t\t\tthis.proj = new ProjectionSurface(this.transform);\n\t\t\tthis.pluginName = 'sprite_bilinear';\n\t\t}\n\n\t\tproj: ProjectionSurface;\n\n\t\taTrans = new PIXI.Matrix();\n\n\t\tget worldTransform() {\n\t\t\treturn this.proj as any;\n\t\t}\n\t}\n\n\t(Text2s.prototype as any).calculateVertices = Sprite2s.prototype.calculateVertices;\n\t(Text2s.prototype as any).calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\n\t(Text2s.prototype as any)._calculateBounds = Sprite2s.prototype._calculateBounds;\n}\n","namespace pixi_projection {\n\texport function container2dWorldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\texport class Container2d extends PIXI.Container {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.proj = new Projection2d(this.transform);\n\t\t}\n\n\t\tproj: Projection2d;\n\n\t\tget worldTransform() {\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t\t}\n\t}\n}\n","// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\n\nnamespace pixi_projection {\n\timport Point = PIXI.Point;\n\timport IPoint = PIXI.PointLike;\n\n\tconst mat3id = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\texport enum AFFINE {\n\t\tNONE = 0,\n\t\tFREE = 1,\n\t\tAXIS_X = 2,\n\t\tAXIS_Y = 3,\n\t\tPOINT = 4\n\t}\n\n\texport class Matrix2d {\n\t\t/**\n\t\t * A default (identity) matrix\n\t\t *\n\t\t * @static\n\t\t * @const\n\t\t */\n\t\tstatic readonly IDENTITY = new Matrix2d();\n\n\t\t/**\n\t\t * A temp matrix\n\t\t *\n\t\t * @static\n\t\t * @const\n\t\t */\n\t\tstatic readonly TEMP_MATRIX = new Matrix2d();\n\n\t\t/**\n\t\t * mat3 implementation through array of 9 elements\n\t\t */\n\t\tmat3: Float64Array;\n\n\t\tfloatArray: Float32Array = null;\n\n\t\tconstructor(backingArray?: ArrayLike<number>) {\n\t\t\tthis.mat3 = new Float64Array(backingArray || mat3id);\n\t\t}\n\n\t\tget a() {\n\t\t\treturn this.mat3[0];\n\t\t}\n\n\t\tget b() {\n\t\t\treturn this.mat3[1];\n\t\t}\n\n\t\tget c() {\n\t\t\treturn this.mat3[3];\n\t\t}\n\n\t\tget d() {\n\t\t\treturn this.mat3[4];\n\t\t}\n\n\t\tget tx() {\n\t\t\treturn this.mat3[6];\n\t\t}\n\n\t\tget ty() {\n\t\t\treturn this.mat3[7];\n\t\t}\n\n\t\tset a(value: number) {\n\t\t\tthis.mat3[0] = value;\n\t\t}\n\n\t\tset b(value: number) {\n\t\t\tthis.mat3[1] = value;\n\t\t}\n\n\t\tset c(value: number) {\n\t\t\tthis.mat3[3] = value;\n\t\t}\n\n\t\tset d(value: number) {\n\t\t\tthis.mat3[4] = value;\n\t\t}\n\n\t\tset tx(value: number) {\n\t\t\tthis.mat3[6] = value;\n\t\t}\n\n\t\tset ty(value: number) {\n\t\t\tthis.mat3[7] = value;\n\t\t}\n\n\t\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\t\t\tlet mat3 = this.mat3;\n\t\t\tmat3[0] = a;\n\t\t\tmat3[1] = b;\n\t\t\tmat3[2] = 0;\n\t\t\tmat3[3] = c;\n\t\t\tmat3[4] = d;\n\t\t\tmat3[5] = 0;\n\t\t\tmat3[6] = tx;\n\t\t\tmat3[7] = ty;\n\t\t\tmat3[8] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\n\t\t\tif (!this.floatArray) {\n\t\t\t\tthis.floatArray = new Float32Array(9);\n\t\t\t}\n\n\t\t\tconst array = out || this.floatArray;\n\t\t\tconst mat3 = this.mat3;\n\n\t\t\tif (transpose) {\n\t\t\t\tarray[0] = mat3[0];\n\t\t\t\tarray[1] = mat3[1];\n\t\t\t\tarray[2] = mat3[2];\n\t\t\t\tarray[3] = mat3[3];\n\t\t\t\tarray[4] = mat3[4];\n\t\t\t\tarray[5] = mat3[5];\n\t\t\t\tarray[6] = mat3[6];\n\t\t\t\tarray[7] = mat3[7];\n\t\t\t\tarray[8] = mat3[8];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//this branch is NEVER USED in pixi\n\t\t\t\tarray[0] = mat3[0];\n\t\t\t\tarray[1] = mat3[3];\n\t\t\t\tarray[2] = mat3[6];\n\t\t\t\tarray[3] = mat3[1];\n\t\t\t\tarray[4] = mat3[4];\n\t\t\t\tarray[5] = mat3[7];\n\t\t\t\tarray[6] = mat3[2];\n\t\t\t\tarray[7] = mat3[5];\n\t\t\t\tarray[8] = mat3[8];\n\t\t\t}\n\n\t\t\treturn array;\n\t\t}\n\n\t\t//TODO: remove props\n\t\tapply(pos: IPoint, newPos: IPoint): IPoint {\n\t\t\tnewPos = newPos || new PIXI.Point();\n\n\t\t\tconst mat3 = this.mat3;\n\t\t\tconst x = pos.x;\n\t\t\tconst y = pos.y;\n\n\t\t\tlet z = 1.0 / (mat3[2] * x + mat3[5] * y + mat3[8]);\n\t\t\tnewPos.x = z * (mat3[0] * x + mat3[3] * y + mat3[6]);\n\t\t\tnewPos.y = z * (mat3[1] * x + mat3[4] * y + mat3[7]);\n\n\t\t\treturn newPos;\n\t\t}\n\n\t\ttranslate(tx: number, ty: number) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tmat3[0] += tx * mat3[2];\n\t\t\tmat3[1] += ty * mat3[2];\n\t\t\tmat3[3] += tx * mat3[5];\n\t\t\tmat3[4] += ty * mat3[5];\n\t\t\tmat3[6] += tx * mat3[8];\n\t\t\tmat3[7] += ty * mat3[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x: number, y: number) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tmat3[0] *= x;\n\t\t\tmat3[1] *= y;\n\t\t\tmat3[3] *= x;\n\t\t\tmat3[4] *= y;\n\t\t\tmat3[6] *= x;\n\t\t\tmat3[7] *= y;\n\t\t\treturn this;\n\t\t}\n\n\t\tscaleAndTranslate(scaleX: number, scaleY: number, tx: number, ty: number) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tmat3[0] = scaleX * mat3[0] + tx * mat3[2];\n\t\t\tmat3[1] = scaleY * mat3[1] + ty * mat3[2];\n\t\t\tmat3[3] = scaleX * mat3[3] + tx * mat3[5];\n\t\t\tmat3[4] = scaleY * mat3[4] + ty * mat3[5];\n\t\t\tmat3[6] = scaleX * mat3[6] + tx * mat3[8];\n\t\t\tmat3[7] = scaleY * mat3[7] + ty * mat3[8];\n\t\t}\n\n\t\t//TODO: remove props\n\t\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\n\t\t\tnewPos = newPos || new Point();\n\n\t\t\tconst a = this.mat3;\n\t\t\tconst x = pos.x;\n\t\t\tconst y = pos.y;\n\n\t\t\tconst a00 = a[0], a01 = a[3], a02 = a[6],\n\t\t\t\ta10 = a[1], a11 = a[4], a12 = a[7],\n\t\t\t\ta20 = a[2], a21 = a[5], a22 = a[8];\n\n\t\t\tlet newX = (a22 * a11 - a12 * a21) * x + (-a22 * a01 + a02 * a21) * y + (a12 * a01 - a02 * a11);\n\t\t\tlet newY = (-a22 * a10 + a12 * a20) * x + (a22 * a00 - a02 * a20) * y + (-a12 * a00 + a02 * a10);\n\t\t\tlet newZ = (a21 * a10 - a11 * a20) * x + (-a21 * a00 + a01 * a20) * y + (a11 * a00 - a01 * a10);\n\n\t\t\tnewPos.x = newX / newZ;\n\t\t\tnewPos.y = newY / newZ;\n\n\t\t\treturn newPos;\n\t\t}\n\n\t\tinvert(): Matrix2d {\n\t\t\tconst a = this.mat3;\n\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\t\t\tb01 = a22 * a11 - a12 * a21,\n\t\t\t\tb11 = -a22 * a10 + a12 * a20,\n\t\t\t\tb21 = a21 * a10 - a11 * a20;\n\n\t\t\t// Calculate the determinant\n\t\t\tlet det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\t\tif (!det) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tdet = 1.0 / det;\n\n\t\t\ta[0] = b01 * det;\n\t\t\ta[1] = (-a22 * a01 + a02 * a21) * det;\n\t\t\ta[2] = (a12 * a01 - a02 * a11) * det;\n\t\t\ta[3] = b11 * det;\n\t\t\ta[4] = (a22 * a00 - a02 * a20) * det;\n\t\t\ta[5] = (-a12 * a00 + a02 * a10) * det;\n\t\t\ta[6] = b21 * det;\n\t\t\ta[7] = (-a21 * a00 + a01 * a20) * det;\n\t\t\ta[8] = (a11 * a00 - a01 * a10) * det;\n\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity(): Matrix2d {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tmat3[0] = 1;\n\t\t\tmat3[1] = 0;\n\t\t\tmat3[2] = 0;\n\t\t\tmat3[3] = 0;\n\t\t\tmat3[4] = 1;\n\t\t\tmat3[5] = 0;\n\t\t\tmat3[6] = 0;\n\t\t\tmat3[7] = 0;\n\t\t\tmat3[8] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix2d(this.mat3);\n\t\t}\n\n\t\tcopyTo(matrix: Matrix2d) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tconst ar2 = matrix.mat3;\n\t\t\tar2[0] = mat3[0];\n\t\t\tar2[1] = mat3[1];\n\t\t\tar2[2] = mat3[2];\n\t\t\tar2[3] = mat3[3];\n\t\t\tar2[4] = mat3[4];\n\t\t\tar2[5] = mat3[5];\n\t\t\tar2[6] = mat3[6];\n\t\t\tar2[7] = mat3[7];\n\t\t\tar2[8] = mat3[8];\n\t\t\treturn matrix;\n\t\t}\n\n\t\t/**\n\t\t * legacy method, change the values of given pixi matrix\n\t\t * @param matrix\n\t\t * @return\n\t\t */\n\t\tcopy(matrix: PIXI.Matrix, affine?: AFFINE) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tconst d = 1.0 / mat3[8];\n\t\t\tconst tx = mat3[6] * d, ty = mat3[7] * d;\n\t\t\tmatrix.a = (mat3[0] - mat3[2] * tx) * d;\n\t\t\tmatrix.b = (mat3[1] - mat3[2] * ty) * d;\n\t\t\tmatrix.c = (mat3[3] - mat3[5] * tx) * d;\n\t\t\tmatrix.d = (mat3[4] - mat3[5] * ty) * d;\n\t\t\tmatrix.tx = tx;\n\t\t\tmatrix.ty = ty;\n\n\t\t\tif (affine >= 2) {\n\t\t\t\tif (affine === AFFINE.POINT) {\n\t\t\t\t\tmatrix.a = 1;\n\t\t\t\t\tmatrix.b = 0;\n\t\t\t\t\tmatrix.c = 0;\n\t\t\t\t\tmatrix.d = 1;\n\t\t\t\t} else if (affine === AFFINE.AXIS_X) {\n\t\t\t\t\tmatrix.c = -matrix.b;\n\t\t\t\t\tmatrix.d = matrix.a;\n\t\t\t\t} else if (affine === AFFINE.AXIS_Y) {\n\t\t\t\t\tmatrix.a = matrix.d;\n\t\t\t\t\tmatrix.c = -matrix.b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * legacy method, change the values of given pixi matrix\n\t\t * @param matrix\n\t\t * @return\n\t\t */\n\t\tcopyFrom(matrix: PIXI.Matrix) {\n\t\t\tconst mat3 = this.mat3;\n\t\t\tmat3[0] = matrix.a;\n\t\t\tmat3[1] = matrix.b;\n\t\t\tmat3[2] = 0;\n\t\t\tmat3[3] = matrix.c;\n\t\t\tmat3[4] = matrix.d;\n\t\t\tmat3[5] = 0;\n\t\t\tmat3[6] = matrix.tx;\n\t\t\tmat3[7] = matrix.ty;\n\t\t\tmat3[8] = 1.0;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetToMultLegacy(pt: PIXI.Matrix, lt: Matrix2d) {\n\t\t\tconst out = this.mat3;\n\t\t\tconst b = lt.mat3;\n\n\t\t\tconst a00 = pt.a, a01 = pt.b,\n\t\t\t\ta10 = pt.c, a11 = pt.d,\n\t\t\t\ta20 = pt.tx, a21 = pt.ty,\n\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\n\n\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t\t\tout[2] = b02;\n\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t\t\tout[5] = b12;\n\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t\t\tout[8] = b22;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// that's transform multiplication we use\n\t\tsetToMult2d(pt: Matrix2d, lt: Matrix2d) {\n\t\t\tconst out = this.mat3;\n\t\t\tconst a = pt.mat3, b = lt.mat3;\n\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\n\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t\t\tout[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t\t\tout[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t\t\tout[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n\t\t\treturn this;\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n\timport PointLike = PIXI.PointLike;\n\n\tfunction transformHack(this: PIXI.TransformStatic, parentTransform: PIXI.TransformBase) {\n\t\t// implementation here\n\t\tconst proj = this.proj as Projection2d;\n\t\tconst ta = this as any;\n\t\tconst pwid = (parentTransform as any)._worldID;\n\n\t\tconst lt = ta.localTransform;\n\n\t\t//this part is copied from\n\t\tif (ta._localID !== ta._currentLocalID) {\n\t\t\t// get the matrix values of the displayobject based on its transform properties..\n\t\t\tlt.a = ta._cx * ta.scale._x;\n\t\t\tlt.b = ta._sx * ta.scale._x;\n\t\t\tlt.c = ta._cy * ta.scale._y;\n\t\t\tlt.d = ta._sy * ta.scale._y;\n\n\t\t\t//TODO: do something about pivot, it has to be applied after the projections\n\t\t\t//TODO: add special pivot mode that user request for 2 years already\n\n\t\t\tlt.tx = ta.position._x - ((ta.pivot._x * lt.a) + (ta.pivot._y * lt.c));\n\t\t\tlt.ty = ta.position._y - ((ta.pivot._x * lt.b) + (ta.pivot._y * lt.d));\n\t\t\tta._currentLocalID = ta._localID;\n\n\t\t\t// force an update..\n\t\t\tproj._currentProjID = -1;\n\t\t}\n\n\t\tconst _matrixID = proj._projID;\n\t\tif (proj._currentProjID !== _matrixID) {\n\t\t\tproj._currentProjID = _matrixID;\n\t\t\tif (_matrixID !== 0) {\n\t\t\t\tproj.local.setToMultLegacy(lt, proj.matrix);\n\t\t\t} else {\n\t\t\t\tproj.local.copyFrom(lt);\n\t\t\t}\n\t\t\tta._parentID = -1;\n\t\t}\n\n\t\tif (ta._parentID !== pwid) {\n\t\t\tconst pp = parentTransform.proj as Projection2d;\n\t\t\tif (pp && !pp.affine) {\n\t\t\t\tproj.world.setToMult2d(pp.world, proj.local);\n\t\t\t} else {\n\t\t\t\tproj.world.setToMultLegacy(parentTransform.worldTransform, proj.local);\n\t\t\t}\n\t\t\tproj.world.copy(ta.worldTransform, proj._affine);\n\t\t\tta._parentID = pwid;\n\t\t\tta._worldID++;\n\t\t}\n\t}\n\n\tconst t0 = new PIXI.Point();\n\tconst tt = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\n\tconst tempRect = new PIXI.Rectangle();\n\tconst tempMat = new Matrix2d();\n\n\texport class Projection2d extends Projection {\n\n\t\tconstructor(legacy: PIXI.TransformBase, enable?: boolean) {\n\t\t\tsuper(legacy, enable);\n\t\t}\n\n\t\tmatrix = new Matrix2d();\n\t\tlocal = new Matrix2d();\n\t\tworld = new Matrix2d();\n\n\t\t_projID = 0;\n\t\t_currentProjID = -1;\n\t\t_affine = AFFINE.NONE;\n\n\t\tset affine(value: AFFINE) {\n\t\t\tif (this._affine == value) return;\n\t\t\tthis._affine = value;\n\t\t\tthis._currentProjID = -1;\n\t\t}\n\n\t\tget affine() {\n\t\t\treturn this._affine;\n\t\t}\n\n\t\tset enabled(value: boolean) {\n\t\t\tif (value === this._enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._enabled = value;\n\t\t\tif (value) {\n\t\t\t\tthis.legacy.updateTransform = transformHack;\n\t\t\t\t(this.legacy as any)._parentID = -1;\n\t\t\t} else {\n\t\t\t\tthis.legacy.updateTransform = PIXI.TransformStatic.prototype.updateTransform;\n\t\t\t\t(this.legacy as any)._parentID = -1;\n\t\t\t}\n\t\t}\n\n\t\tsetAxisX(p: PointLike, factor: number = 1): void {\n\t\t\tconst x = p.x, y = p.y;\n\t\t\tconst d = Math.sqrt(x * x + y * y);\n\t\t\tconst mat3 = this.matrix.mat3;\n\t\t\tmat3[0] = x / d;\n\t\t\tmat3[1] = y / d;\n\t\t\tmat3[2] = factor / d;\n\t\t\tthis._projID++;\n\t\t}\n\n\t\tsetAxisY(p: PointLike, factor: number = 1) {\n\t\t\tconst x = p.x, y = p.y;\n\t\t\tconst d = Math.sqrt(x * x + y * y);\n\t\t\tconst mat3 = this.matrix.mat3;\n\t\t\tmat3[3] = x / d;\n\t\t\tmat3[4] = y / d;\n\t\t\tmat3[5] = factor / d;\n\t\t\tthis._projID++;\n\t\t}\n\n\t\tmapSprite(sprite: PIXI.Sprite, quad: Array<PointLike>) {\n\t\t\tconst tex = sprite.texture;\n\n\t\t\ttempRect.x = -sprite.anchor.x * tex.orig.width;\n\t\t\ttempRect.y = -sprite.anchor.y * tex.orig.height;\n\t\t\ttempRect.width = tex.orig.width;\n\t\t\ttempRect.height = tex.orig.height;\n\n\t\t\treturn this.mapQuad(tempRect, quad);\n\t\t}\n\n\t\tmapQuad(rect: PIXI.Rectangle, p: Array<PointLike>) {\n\t\t\t// utils.getPositionFromQuad(p, anchor, t0);\n\t\t\ttt[0].set(rect.x, rect.y);\n\t\t\ttt[1].set(rect.x + rect.width, rect.y);\n\t\t\ttt[2].set(rect.x + rect.width, rect.y + rect.height);\n\t\t\ttt[3].set(rect.x, rect.y + rect.height);\n\n\t\t\tlet k1 = 1, k2 = 2, k3 = 3;\n\t\t\tlet f = utils.getIntersectionFactor(p[0], p[2], p[1], p[3], t0);\n\t\t\tif (f !== 0) {\n\t\t\t\tk1 = 1;\n\t\t\t\tk2 = 3;\n\t\t\t\tk3 = 2;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t\t/*f = utils.getIntersectionFactor(p[0], p[1], p[2], p[3], t0);\n\t\t\t\tif (f > 0) {\n\t\t\t\t\tk1 = 2;\n\t\t\t\t\tk2 = 3;\n\t\t\t\t\tk3 = 1;\n\t\t\t\t} else {\n\t\t\t\t\tf = utils.getIntersectionFactor(p[0], p[3], p[1], p[2], t0);\n\t\t\t\t\tif (f > 0) {\n\t\t\t\t\t\t// cant find it :(\n\t\t\t\t\t\tk1 = 1;\n\t\t\t\t\t\tk2 = 2;\n\t\t\t\t\t\tk3 = 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t}\n\t\t\tlet d0 = Math.sqrt((p[0].x - t0.x) * (p[0].x - t0.x) + (p[0].y - t0.y) * (p[0].y - t0.y));\n\t\t\tlet d1 = Math.sqrt((p[k1].x - t0.x) * (p[k1].x - t0.x) + (p[k1].y - t0.y) * (p[k1].y - t0.y));\n\t\t\tlet d2 = Math.sqrt((p[k2].x - t0.x) * (p[k2].x - t0.x) + (p[k2].y - t0.y) * (p[k2].y - t0.y));\n\t\t\tlet d3 = Math.sqrt((p[k3].x - t0.x) * (p[k3].x - t0.x) + (p[k3].y - t0.y) * (p[k3].y - t0.y));\n\n\t\t\tlet q0 = (d0 + d3) / d3;\n\t\t\tlet q1 = (d1 + d2) / d2;\n\t\t\tlet q2 = (d1 + d2) / d1;\n\n\t\t\tlet mat3 = this.matrix.mat3;\n\t\t\tmat3[0] = tt[0].x * q0;\n\t\t\tmat3[1] = tt[0].y * q0;\n\t\t\tmat3[2] = q0;\n\t\t\tmat3[3] = tt[k1].x * q1;\n\t\t\tmat3[4] = tt[k1].y * q1;\n\t\t\tmat3[5] = q1;\n\t\t\tmat3[6] = tt[k2].x * q2;\n\t\t\tmat3[7] = tt[k2].y * q2;\n\t\t\tmat3[8] = q2;\n\t\t\tthis.matrix.invert();\n\n\t\t\tmat3 = tempMat.mat3;\n\t\t\tmat3[0] = p[0].x;\n\t\t\tmat3[1] = p[0].y;\n\t\t\tmat3[2] = 1;\n\t\t\tmat3[3] = p[k1].x;\n\t\t\tmat3[4] = p[k1].y;\n\t\t\tmat3[5] = 1;\n\t\t\tmat3[6] = p[k2].x;\n\t\t\tmat3[7] = p[k2].y;\n\t\t\tmat3[8] = 1;\n\n\t\t\tthis.matrix.setToMult2d(tempMat, this.matrix);\n\t\t\tthis._projID++;\n\t\t}\n\n\t\tclear() {\n\t\t\tthis._currentProjID = -1;\n\t\t\tthis._projID = 0;\n\t\t\tthis.matrix.identity();\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n\texport class Mesh2d extends PIXI.mesh.Mesh {\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array,\n\t\t            indices?: Uint16Array, drawMode?: number) {\n\t\t\tsuper(texture, vertices, uvs, indices, drawMode);\n\t\t\tthis.proj = new Projection2d(this.transform);\n\t\t\tthis.pluginName = 'mesh2d';\n\t\t}\n\n\t\tproj: Projection2d;\n\n\t\tget worldTransform() {\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n\tlet shaderVert =\n\t\t`precision highp float;\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform mat3 uTransform;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);\n    gl_Position.z = 0.0;\n\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\n}\n`;\n\tlet shaderFrag = `\nvarying vec2 vTextureCoord;\nuniform vec4 uColor;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\n}`;\n\n\texport class Mesh2dRenderer extends PIXI.mesh.MeshRenderer {\n\t\tonContextChange()\n\t\t{\n\t\t\tconst gl = this.renderer.gl;\n\n\t\t\tthis.shader = new PIXI.Shader(gl, shaderVert, shaderFrag);\n\t\t}\n\t}\n\n\tPIXI.WebGLRenderer.registerPlugin('mesh2d', Mesh2dRenderer);\n}\n","declare module PIXI {\n    interface Sprite {\n        convertTo2d(): void;\n    }\n\n    interface Container {\n        convertTo2d(): void;\n        convertSubtreeTo2d(): void;\n    }\n\n    namespace mesh {\n\t    interface Mesh {\n\t\t    convertTo2d(): void;\n\t    }\n    }\n}\n\nnamespace pixi_projection {\n    (PIXI as any).Sprite.prototype.convertTo2d = function () {\n        if (this.proj) return;\n        this.calculateVertices = Sprite2d.prototype.calculateVertices;\n        this.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\n\t    this._calculateBounds = Sprite2d.prototype._calculateBounds;\n        //cointainer\n        this.proj = new Projection2d(this.transform);\n        this.pluginName = 'sprite2d';\n        this.vertexData = new Float32Array(12);\n        Object.defineProperty(this, \"worldTransform\", {\n            get: container2dWorldTransform,\n            enumerable: true,\n            configurable: true\n        });\n    };\n\n\t(PIXI as any).mesh.Mesh.prototype.convertTo2d = function () {\n\t\tif (this.proj) return;\n\t\tthis.proj = new Projection2d(this.transform);\n\t\tthis.pluginName = 'mesh2d';\n\t\tObject.defineProperty(this, \"worldTransform\", {\n\t\t\tget: container2dWorldTransform,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t};\n\n    (PIXI as any).Container.prototype.convertTo2d = function () {\n        if (this.proj) return;\n        this.proj = new Projection2d(this.transform);\n        Object.defineProperty(this, \"worldTransform\", {\n            get: container2dWorldTransform,\n            enumerable: true,\n            configurable: true\n        });\n    };\n\n    (PIXI as any).Container.prototype.convertSubtreeTo2d = function () {\n        this.convertTo2d();\n        for (let i = 0; i < this.children.length; i++) {\n            this.children[i].convertSubtreeTo2d();\n        }\n    };\n}\n","namespace pixi_projection {\n\texport class Sprite2d extends PIXI.Sprite {\n\t\tconstructor(texture: PIXI.Texture) {\n\t\t\tsuper(texture);\n\t\t\tthis.proj = new Projection2d(this.transform);\n\t\t\tthis.pluginName = 'sprite2d';\n\t\t\tthis.vertexData = new Float32Array(12);\n\t\t}\n\n\t\tproj: Projection2d;\n\n\t\t_calculateBounds() {\n\t\t\tthis.calculateTrimmedVertices();\n\t\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\n\t\t}\n\n\t\tcalculateVertices() {\n\t\t\tif (this.proj._affine) {\n\t\t\t\tif (this.vertexData.length != 8) {\n\t\t\t\t\tthis.vertexData = new Float32Array(8);\n\t\t\t\t}\n\n\t\t\t\tsuper.calculateVertices();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.vertexData.length != 12) {\n\t\t\t\tthis.vertexData = new Float32Array(12);\n\t\t\t}\n\n\t\t\tconst wid = (this.transform as any)._worldID;\n\t\t\tconst tuid = (this._texture as any)._updateID;\n\t\t\tif (this._transformID === wid && this._textureID === tuid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transformID = wid;\n\t\t\tthis._textureID = tuid;\n\n\t\t\tconst texture = this._texture;\n\t\t\tconst wt = this.proj.world.mat3;\n\t\t\tconst vertexData = this.vertexData;\n\t\t\tconst trim = texture.trim;\n\t\t\tconst orig = texture.orig;\n\t\t\tconst anchor = this._anchor;\n\n\t\t\tlet w0 = 0;\n\t\t\tlet w1 = 0;\n\t\t\tlet h0 = 0;\n\t\t\tlet h1 = 0;\n\n\t\t\tif (trim) {\n\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\n\t\t\t\tw0 = w1 + trim.width;\n\n\t\t\t\th1 = trim.y - (anchor._y * orig.height);\n\t\t\t\th0 = h1 + trim.height;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw1 = -anchor._x * orig.width;\n\t\t\t\tw0 = w1 + orig.width;\n\n\t\t\t\th1 = -anchor._y * orig.height;\n\t\t\t\th0 = h1 + orig.height;\n\t\t\t}\n\n\t\t\tvertexData[0] = (wt[0] * w1) + (wt[3] * h1) + wt[6];\n\t\t\tvertexData[1] = (wt[1] * w1) + (wt[4] * h1) + wt[7];\n\t\t\tvertexData[2] = (wt[2] * w1) + (wt[5] * h1) + wt[8];\n\n\t\t\tvertexData[3] = (wt[0] * w0) + (wt[3] * h1) + wt[6];\n\t\t\tvertexData[4] = (wt[1] * w0) + (wt[4] * h1) + wt[7];\n\t\t\tvertexData[5] = (wt[2] * w0) + (wt[5] * h1) + wt[8];\n\n\t\t\tvertexData[6] = (wt[0] * w0) + (wt[3] * h0) + wt[6];\n\t\t\tvertexData[7] = (wt[1] * w0) + (wt[4] * h0) + wt[7];\n\t\t\tvertexData[8] = (wt[2] * w0) + (wt[5] * h0) + wt[8];\n\n\t\t\tvertexData[9] = (wt[0] * w1) + (wt[3] * h0) + wt[6];\n\t\t\tvertexData[10] = (wt[1] * w1) + (wt[4] * h0) + wt[7];\n\t\t\tvertexData[11] = (wt[2] * w1) + (wt[5] * h0) + wt[8];\n\t\t}\n\n\t\tcalculateTrimmedVertices() {\n\t\t\tif (this.proj._affine) {\n\t\t\t\tsuper.calculateTrimmedVertices();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst wid = (this.transform as any)._worldID;\n\t\t\tconst tuid = (this._texture as any)._updateID;\n\t\t\tif (!this.vertexTrimmedData) {\n\t\t\t\tthis.vertexTrimmedData = new Float32Array(8);\n\t\t\t}\n\t\t\telse if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transformTrimmedID = wid;\n\t\t\tthis._textureTrimmedID = tuid;\n\n\t\t\t// lets do some special trim code!\n\t\t\tconst texture = this._texture;\n\t\t\tconst vertexData = this.vertexTrimmedData;\n\t\t\tconst orig = texture.orig;\n\t\t\tconst anchor = this._anchor;\n\n\t\t\t// lets calculate the new untrimmed bounds..\n\t\t\tconst wt = this.proj.world.mat3;\n\n\t\t\tconst w1 = -anchor._x * orig.width;\n\t\t\tconst w0 = w1 + orig.width;\n\n\t\t\tconst h1 = -anchor._y * orig.height;\n\t\t\tconst h0 = h1 + orig.height;\n\n\t\t\tlet z = 1.0 / (wt[2] * w1 + wt[5] * h1 + wt[8]);\n\t\t\tvertexData[0] = z * ((wt[0] * w1) + (wt[3] * h1) + wt[6]);\n\t\t\tvertexData[1] = z * ((wt[1] * w1) + (wt[4] * h1) + wt[7]);\n\n\t\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h1 + wt[8]);\n\t\t\tvertexData[2] = z * ((wt[0] * w0) + (wt[3] * h1) + wt[6]);\n\t\t\tvertexData[3] = z * ((wt[1] * w0) + (wt[4] * h1) + wt[7]);\n\n\t\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h0 + wt[8]);\n\t\t\tvertexData[4] = z * ((wt[0] * w0) + (wt[3] * h0) + wt[6]);\n\t\t\tvertexData[5] = z * ((wt[1] * w0) + (wt[4] * h0) + wt[7]);\n\n\t\t\tz = 1.0 / (wt[2] * w1 + wt[5] * h0 + wt[8]);\n\t\t\tvertexData[6] = z * ((wt[0] * w1) + (wt[3] * h0) + wt[6]);\n\t\t\tvertexData[7] = z * ((wt[1] * w1) + (wt[4] * h0) + wt[7]);\n\t\t}\n\n\t\tget worldTransform() {\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t\t}\n\t}\n}\n","namespace pixi_projection {\n\timport MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\n\n\tclass Sprite2dRenderer extends MultiTextureSpriteRenderer {\n\t\tshaderVert =\n`precision highp float;\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\nattribute float aTextureId;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying float vTextureId;\n\nvoid main(void){\n    gl_Position.xyw = projectionMatrix * aVertexPosition;\n    gl_Position.z = 0.0;\n    \n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vColor = aColor;\n}\n`;\n\t\tshaderFrag = `\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nvarying float vTextureId;\nuniform sampler2D uSamplers[%count%];\n\nvoid main(void){\nvec4 color;\nvec2 textureCoord = vTextureCoord;\nfloat textureId = floor(vTextureId+0.5);\n%forloop%\ngl_FragColor = color * vColor;\n}`;\n\n\t\tcreateVao(vertexBuffer: PIXI.glCore.GLBuffer) {\n\t\t\tconst attrs = this.shader.attributes;\n\t\t\tthis.vertSize = 6;\n\t\t\tthis.vertByteSize = this.vertSize * 4;\n\n\t\t\tconst gl = this.renderer.gl;\n\t\t\tconst vao = this.renderer.createVao()\n\t\t\t\t.addIndex(this.indexBuffer)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 3 * 4)\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4);\n\n\t\t\tif (attrs.aTextureId) {\n\t\t\t\tvao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\n\t\t\t}\n\n\t\t\treturn vao;\n\n\t\t}\n\n\t\tfillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, argb: number, textureId: number) {\n\t\t\tconst vertexData = sprite.vertexData;\n\t\t\tconst uvs = sprite._texture._uvs.uvsUint32;\n\t\t\tif (vertexData.length === 8) {\n\t\t\t\t//PIXI standart sprite\n\t\t\t\tif (this.renderer.roundPixels) {\n\t\t\t\t\tconst resolution = this.renderer.resolution;\n\n\t\t\t\t\tfloat32View[index] = ((vertexData[0] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 1] = ((vertexData[1] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 2] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 6] = ((vertexData[2] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 7] = ((vertexData[3] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 8] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 12] = ((vertexData[4] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 13] = ((vertexData[5] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 14] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 18] = ((vertexData[6] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 19] = ((vertexData[7] * resolution) | 0) / resolution;\n\t\t\t\t\tfloat32View[index + 20] = 1.0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfloat32View[index] = vertexData[0];\n\t\t\t\t\tfloat32View[index + 1] = vertexData[1];\n\t\t\t\t\tfloat32View[index + 2] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 6] = vertexData[2];\n\t\t\t\t\tfloat32View[index + 7] = vertexData[3];\n\t\t\t\t\tfloat32View[index + 8] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 12] = vertexData[4];\n\t\t\t\t\tfloat32View[index + 13] = vertexData[5];\n\t\t\t\t\tfloat32View[index + 14] = 1.0;\n\n\t\t\t\t\tfloat32View[index + 18] = vertexData[6];\n\t\t\t\t\tfloat32View[index + 19] = vertexData[7];\n\t\t\t\t\tfloat32View[index + 20] = 1.0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// projective 2d/3d sprite\n\n\t\t\t\t// I removed roundPixels, dont need that for those kind of sprites\n\n\t\t\t\tfloat32View[index] = vertexData[0];\n\t\t\t\tfloat32View[index + 1] = vertexData[1];\n\t\t\t\tfloat32View[index + 2] = vertexData[2];\n\n\t\t\t\tfloat32View[index + 6] = vertexData[3];\n\t\t\t\tfloat32View[index + 7] = vertexData[4];\n\t\t\t\tfloat32View[index + 8] = vertexData[5];\n\n\t\t\t\tfloat32View[index + 12] = vertexData[6];\n\t\t\t\tfloat32View[index + 13] = vertexData[7];\n\t\t\t\tfloat32View[index + 14] = vertexData[8];\n\n\t\t\t\tfloat32View[index + 18] = vertexData[9];\n\t\t\t\tfloat32View[index + 19] = vertexData[10];\n\t\t\t\tfloat32View[index + 20] = vertexData[11];\n\t\t\t}\n\n\t\t\tuint32View[index + 3] = uvs[0];\n\t\t\tuint32View[index + 9] = uvs[1];\n\t\t\tuint32View[index + 15] = uvs[2];\n\t\t\tuint32View[index + 21] = uvs[3];\n\n\t\t\tuint32View[index + 4] = uint32View[index + 10] = uint32View[index + 16] = uint32View[index + 22] = argb;\n\t\t\tfloat32View[index + 5] = float32View[index + 11] = float32View[index + 17] = float32View[index + 23] = textureId;\n\t\t}\n\t}\n\n\tPIXI.WebGLRenderer.registerPlugin('sprite2d', Sprite2dRenderer);\n}","namespace pixi_projection {\n    export class Text2d extends PIXI.Text {\n        constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\n            super(text, style, canvas);\n            this.proj = new Projection2d(this.transform);\n            this.pluginName = 'sprite2d';\n            this.vertexData = new Float32Array(12);\n        }\n\n        proj: Projection2d;\n\n        get worldTransform() {\n\t        return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n        }\n    }\n\n    Text2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\n    (Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\n\t(Text2d.prototype as any)._calculateBounds = Sprite2d.prototype._calculateBounds;\n}\n","namespace pixi_projection {\n\texport class ProjectionsManager {\n\t\t/**\n\t\t * A reference to the current renderer\n\t\t *\n\t\t * @member {PIXI.WebGLRenderer}\n\t\t */\n\t\trenderer: PIXI.WebGLRenderer;\n\n\t\t/**\n\t\t * The current WebGL rendering context\n\t\t *\n\t\t * @member {WebGLRenderingContext}\n\t\t */\n\t\tgl: WebGLRenderingContext;\n\n\t\tconstructor(renderer: PIXI.WebGLRenderer) {\n\t\t\tthis.renderer = renderer;\n\n\t\t\trenderer.on('context', this.onContextChange);\n\t\t}\n\n\t\tonContextChange = (gl: WebGLRenderingContext) => {\n\t\t\tthis.gl = gl;\n\n\t\t\tthis.renderer.maskManager.pushSpriteMask = pushSpriteMask;\n\t\t};\n\n\t\tdestroy() {\n\t\t\tthis.renderer.off('context', this.onContextChange);\n\t\t}\n\t}\n\n\tfunction pushSpriteMask(target: any, maskData: PIXI.Sprite): void {\n\t\tlet alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n\t\tif (!alphaMaskFilter) {\n\t\t\talphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter2d(maskData)];\n\t\t}\n\n\t\talphaMaskFilter[0].resolution = this.renderer.resolution;\n\t\talphaMaskFilter[0].maskSprite = maskData;\n\n\t\t// TODO - may cause issues!\n\t\ttarget.filterArea = maskData.getBounds(true);\n\n\t\tthis.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n\n\t\tthis.alphaMaskIndex++;\n\t}\n\n\tPIXI.WebGLRenderer.registerPlugin('projections', ProjectionsManager);\n}\n","namespace pixi_projection {\n\tconst spriteMaskVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\nuniform mat3 otherMatrix;\n\nvarying vec3 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n\tgl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n\tvTextureCoord = aTextureCoord;\n\tvMaskCoord = otherMatrix * vec3( aTextureCoord, 1.0);\n}\n`;\n\tconst spriteMaskFrag = `\nvarying vec3 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform sampler2D mask;\n\nvoid main(void)\n{\n    vec2 uv = vMaskCoord.xy / vMaskCoord.z;\n    \n    vec2 text = abs( uv - 0.5 );\n    text = step(0.5, text);\n\n    float clip = 1.0 - max(text.y, text.x);\n    vec4 original = texture2D(uSampler, vTextureCoord);\n    vec4 masky = texture2D(mask, uv);\n\n    original *= (masky.r * masky.a * alpha * clip);\n\n    gl_FragColor = original;\n}\n`;\n\n\tconst tempMat = new Matrix2d();\n\n\texport interface SpriteMaskFilter2dUniforms {\n\t\tmask: PIXI.Texture;\n\t\totherMatrix: PIXI.Matrix | Matrix2d;\n\t\talpha: number;\n\t}\n\n\texport class SpriteMaskFilter2d extends PIXI.Filter<SpriteMaskFilter2dUniforms> {\n\t\tconstructor(sprite: PIXI.Sprite) {\n\t\t\tsuper(spriteMaskVert, spriteMaskFrag);\n\n\t\t\tsprite.renderable = false;\n\n\t\t\tthis.maskSprite = sprite;\n\t\t}\n\n\t\tmaskSprite: PIXI.Sprite;\n\t\tmaskMatrix = new Matrix2d();\n\n\t\tapply(filterManager: PIXI.FilterManager, input: PIXI.RenderTarget, output: PIXI.RenderTarget,\n\t\t      clear?: boolean, currentState?: any) {\n\t\t\tconst maskSprite = this.maskSprite;\n\n\t\t\tthis.uniforms.mask = maskSprite.texture;\n\t\t\tthis.uniforms.otherMatrix = SpriteMaskFilter2d.calculateSpriteMatrix(currentState, this.maskMatrix, maskSprite);\n\t\t\tthis.uniforms.alpha = maskSprite.worldAlpha;\n\n\t\t\tfilterManager.applyFilter(this, input, output);\n\t\t}\n\n\t\tstatic calculateSpriteMatrix(currentState: any, mappedMatrix: Matrix2d, sprite: PIXI.Sprite) {\n\t\t\tlet proj = (sprite as any).proj as Projection2d;\n\n\t\t\tconst filterArea = currentState.sourceFrame;\n\t\t\tconst textureSize = currentState.renderTarget.size;\n\n\t\t\tconst worldTransform = proj && !proj._affine ? proj.world.copyTo(tempMat) : tempMat.copyFrom(sprite.transform.worldTransform);\n\t\t\tconst texture = sprite.texture.orig;\n\n\t\t\tmappedMatrix.set(textureSize.width, 0, 0, textureSize.height, filterArea.x, filterArea.y);\n\t\t\tworldTransform.invert();\n\t\t\tmappedMatrix.setToMult2d(worldTransform, mappedMatrix);\n\t\t\tmappedMatrix.scaleAndTranslate(1.0 / texture.width, 1.0 / texture.height,\n\t\t\t\tsprite.anchor.x, sprite.anchor.y);\n\n\t\t\treturn mappedMatrix;\n\t\t}\n\t}\n}"]}